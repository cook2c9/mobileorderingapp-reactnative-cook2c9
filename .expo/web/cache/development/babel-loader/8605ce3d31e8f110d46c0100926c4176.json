{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { signOut, firebaseUser, db, user } from \"./controller/user-management/Firebase_Helper\";\nimport User from \"./model/User\";\nimport FirebaseController from \"./controller/user-management/Firebase_Helper\";\nimport MapView from 'react-native-maps';\n\nvar MainScreen = function (_React$Component) {\n  _inherits(MainScreen, _React$Component);\n\n  var _super = _createSuper(MainScreen);\n\n  function MainScreen(props) {\n    _classCallCheck(this, MainScreen);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(MainScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, fetch(\"https:localhost:8000/getAllMerchantOauth\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return console.log(data);\n      }));\n    }\n  }]);\n\n  return MainScreen;\n}(React.Component);\n\nexport { MainScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  welcometxt: {\n    marginTop: 50\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/Main.js"],"names":["React","Navigator","signOut","firebaseUser","db","user","User","FirebaseController","MapView","MainScreen","props","navigate","navigation","styles","container","fetch","then","response","json","data","console","log","Component","StyleSheet","create","flex","welcometxt","marginTop","mapStyle","width","Dimensions","get","height"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;SACSC,S;;;;;;;;AACT,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,EAAhC,EAAoCC,IAApC;AACA,OAAOC,IAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;;IAEqBC,U;;;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAElB;;;;wCACmB,CACnB;;;6BAEQ;AAAA,UAEiBC,QAFjB,GAEgC,KAAKD,KAFrC,CAEGE,UAFH,CAEiBD,QAFjB;AAIL,aAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIE,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQQC,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,OAFV,CARR,CAFJ;AAgBH;;;;EA5BmCnB,KAAK,CAACsB,S;;SAAzBb,U;AA+BrB,IAAMI,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAE;AADH,GAJiB;AAO7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAD1B;AAENG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAF3B;AAPmB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image, Dimensions } from 'react-native';\nimport { signOut, firebaseUser, db, user } from './controller/user-management/Firebase_Helper'\nimport User from './model/User';\nimport FirebaseController from './controller/user-management/Firebase_Helper'\nimport MapView from 'react-native-maps';\n\nexport default class MainScreen extends React.Component {\n    \n    constructor(props) {\n        super(props)\n    }\n    componentDidMount() {\n    }\n    \n    render() {\n        \n        const { navigation: { navigate } } = this.props;\n\n        return (\n            \n            <View style = {styles.container}>\n                {/* <MapView style={styles.mapStyle} initialRegion={{\n                    latitude: 37.78825,\n                    longitude: -122.4324,\n                    latitudeDelta: 0.0922,\n                    longitudeDelta: 0.0421,\n                }}/> */}\n                {\n                    fetch(\"https:localhost:8000/getAllMerchantOauth\")\n                    .then(response => response.json())\n                    .then(data => console.log(data))\n                }\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    welcometxt: {\n        marginTop: 50,\n    },\n    mapStyle: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n\n});\n"]},"metadata":{},"sourceType":"module"}
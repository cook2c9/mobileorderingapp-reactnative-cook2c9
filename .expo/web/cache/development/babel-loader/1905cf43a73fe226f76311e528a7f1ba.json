{"ast":null,"code":"import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport App from \"../../App\";\nimport firestore from '@react-native-firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nexport var firebaseApp = firebase.initializeApp(firebaseConfig);\nvar sucessful = true;\nexport function signIn(email, password) {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(function (cred) {\n    return collection('Users').doc(cred.user.uid);\n  }).then(function () {\n    var usersCollection = firestore().collection('Users');\n  }).catch(function (error) {\n    errorMessage = error.message;\n  });\n}\n;\nexport var userDocument = firestore().collection('Users').doc('ABC');\nexport function signUp() {\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n    console.log('User account created & signed in!');\n  }).catch(function (error) {\n    if (error.code === 'auth/email-already-in-use') {\n      console.log('That email address is already in use!');\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n    }\n\n    console.error(error);\n  });\n}\nexport function signOut() {\n  auth().signOut().then(function () {\n    return sucessful = true;\n  }).then(function () {\n    return console.log('User signed out!');\n  });\n}\nexport var errorMessage = \"\";\nexport var sucessful;\nexport var firebaseUser = firebase.auth().currentUser;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Firebase_Helper.js"],"names":["React","useState","firebase","App","firestore","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","sucessful","signIn","email","password","auth","signInWithEmailAndPassword","then","cred","collection","doc","user","uid","usersCollection","catch","error","errorMessage","message","userDocument","signUp","createUserWithEmailAndPassword","console","log","code","signOut","firebaseUser","currentUser"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,GAAP;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAGA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,yCAFO;AAGnBC,EAAAA,WAAW,EAAE,gDAHM;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAAvB;AAMA,OAAO,IAAMC,WAAW,GAAGR,QAAQ,CAACS,aAAT,CAAuBN,cAAvB,CAApB;AACP,IAAIO,SAAS,GAAG,IAAhB;AAEA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAsBC,QAAtB,EAAgC;AACrCb,EAAAA,QAAQ,CAACc,IAAT,GAAgBC,0BAAhB,CAA2CH,KAA3C,EAAkDC,QAAlD,EAA4DG,IAA5D,CAAiE,UAAAC,IAAI,EAAI;AACvE,WAAOC,UAAU,CAAC,OAAD,CAAV,CAAoBC,GAApB,CAAwBF,IAAI,CAACG,IAAL,CAAUC,GAAlC,CAAP;AACD,GAFD,EAGCL,IAHD,CAGM,YAAW;AACf,QAAMM,eAAe,GAAGpB,SAAS,GAAGgB,UAAZ,CAAuB,OAAvB,CAAxB;AACD,GALD,EAMCK,KAND,CAMO,UAASC,KAAT,EAAgB;AAErBC,IAAAA,YAAY,GAAGD,KAAK,CAACE,OAArB;AAED,GAVD;AAWD;AAAA;AAED,OAAO,IAAMC,YAAY,GAAGzB,SAAS,GACpCgB,UAD2B,CAChB,OADgB,EAE3BC,GAF2B,CAEvB,KAFuB,CAArB;AAIP,OAAO,SAASS,MAAT,GAAiB;AACtB5B,EAAAA,QAAQ,CAACc,IAAT,GACCe,8BADD,CACgCjB,KADhC,EACuCC,QADvC,EAECG,IAFD,CAEM,YAAM;AACVc,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,GAJD,EAKCR,KALD,CAKO,UAAAC,KAAK,EAAI;AACd,QAAIA,KAAK,CAACQ,IAAN,KAAe,2BAAnB,EAAgD;AAE9CF,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;;AAED,QAAIP,KAAK,CAACQ,IAAN,KAAe,oBAAnB,EAAyC;AACvCF,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;;AAEDD,IAAAA,OAAO,CAACN,KAAR,CAAcA,KAAd;AACD,GAhBD;AAiBD;AACD,OAAO,SAASS,OAAT,GAAmB;AACxBnB,EAAAA,IAAI,GACHmB,OADD,GAECjB,IAFD,CAEM;AAAA,WAAMN,SAAS,GAAG,IAAlB;AAAA,GAFN,EAGCM,IAHD,CAGM;AAAA,WAAMc,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;AAAA,GAHN;AAID;AACD,OAAO,IAAIN,YAAY,GAAG,EAAnB;AACP,OAAO,IAAIf,SAAJ;AACP,OAAO,IAAMwB,YAAY,GAAGlC,QAAQ,CAACc,IAAT,GAAgBqB,WAArC","sourcesContent":["import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport App from '../../App';\nimport firestore from '@react-native-firebase/firestore';\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nvar sucessful = true;\n\nexport function signIn(email,password) {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(cred => {\n    return collection('Users').doc(cred.user.uid)\n  })\n  .then(function() {\n    const usersCollection = firestore().collection('Users');\n  })\n  .catch(function(error) {\n    // Handle Errors here\n    errorMessage = error.message\n\n  });              \n};\n\nexport const userDocument = firestore()\n.collection('Users')\n.doc('ABC');\n\nexport function signUp(){\n  firebase.auth()\n  .createUserWithEmailAndPassword(email, password)\n  .then(() => {\n    console.log('User account created & signed in!');\n  })\n  .catch(error => {\n    if (error.code === 'auth/email-already-in-use') {\n    \n      console.log('That email address is already in use!');\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n    }\n\n    console.error(error);\n  });\n}\nexport function signOut() {\n  auth()\n  .signOut()\n  .then(() => sucessful = true)\n  .then(() => console.log('User signed out!'));\n}\nexport var errorMessage = \"\";\nexport var sucessful;\nexport const firebaseUser = firebase.auth().currentUser;"]},"metadata":{},"sourceType":"module"}
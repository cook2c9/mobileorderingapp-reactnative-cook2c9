{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Projects/mobileorderingapp-reactnative/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport LoginScreen from \"./controller/user-management/Login\";\nimport MainScreen from \"./Main\";\nimport AccountScreen from \"./Account\";\nimport OrderScreen from \"./Order\";\nimport * as firebase from 'firebase';\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      var user = firebase.auth().currentUser;\n\n      if (!user) {\n        return React.createElement(LoginScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, React.createElement(Tab.Navigator, {\n          headerMode: \"none\",\n          initialRouteName: \"Main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        }, React.createElement(Tab.Screen, {\n          name: \"Main\",\n          component: MainScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }\n        }), React.createElement(Tab.Screen, {\n          name: \"Orders\",\n          component: OrderScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }\n        }), React.createElement(Tab.Screen, {\n          name: \"Account\",\n          component: AccountScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  signOutButton: {}\n});","map":{"version":3,"sources":["/Users/recogunnels/Projects/mobileorderingapp-reactnative/App.js"],"names":["React","useState","useEffect","NavigationContainer","createBottomTabNavigator","LoginScreen","MainScreen","AccountScreen","OrderScreen","firebase","Tab","App","props","navigate","navigation","user","auth","currentUser","Component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","signOutButton"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,mBAAT,QAAmC,0BAAnC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAMC,GAAG,GAAGN,wBAAwB,EAApC;;IAEqBO,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AAAA,UACCC,QADD,GACc,KAAKD,KAAL,CAAWE,UADzB,CACCD,QADD;AAEP,UAAIE,IAAI,GAAGN,QAAQ,CAACO,IAAT,GAAgBC,WAA3B;;AACA,UAAI,CAACF,IAAL,EAAW;AACT,eACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,MAKK;AACD,eACQ,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD,CAAK,SAAL;AAAe,UAAA,UAAU,EAAC,MAA1B;AAAiC,UAAA,gBAAgB,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD,CAAK,MAAL;AAAY,UAAA,IAAI,EAAC,MAAjB;AAAwB,UAAA,SAAS,EAAET,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,GAAD,CAAK,MAAL;AAAY,UAAA,IAAI,EAAC,QAAjB;AAA0B,UAAA,SAAS,EAAEE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,GAAD,CAAK,MAAL;AAAY,UAAA,IAAI,EAAC,SAAjB;AAA2B,UAAA,SAAS,EAAED,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADJ,CADR;AASH;AACF;;;;EAxB8BP,KAAK,CAACkB,S;;SAAlBP,G;AA6BrB,IAAMQ,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,aAAa,EAAE;AAPgB,CAAlB,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { NavigationContainer} from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport LoginScreen from './controller/user-management/Login';\nimport MainScreen from './Main';\nimport AccountScreen from './Account';\nimport OrderScreen from './Order';\nimport * as firebase from 'firebase';\n\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { navigate } = this.props.navigation;\n    var user = firebase.auth().currentUser;\n    if (!user) {\n      return (\n        <LoginScreen/>\n      )\n    } \n    else {\n        return (\n                <NavigationContainer>\n                    <Tab.Navigator headerMode=\"none\" initialRouteName=\"Main\">\n                      <Tab.Screen name=\"Main\" component={MainScreen} />\n                      <Tab.Screen name=\"Orders\" component={OrderScreen} />\n                      <Tab.Screen name=\"Account\" component={AccountScreen} />\n                    </Tab.Navigator>\n                  </NavigationContainer>\n        )\n    }  \n  }\n\n    \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  signOutButton: {\n    \n  },\n});\n"]},"metadata":{},"sourceType":"module"}
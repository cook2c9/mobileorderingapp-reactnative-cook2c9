{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/user-management/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { white } from 'color-name';\nimport * as firebase from 'firebase';\nimport App from \"../App\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.logInButtonClickListner = function () {\n      firebase.auth().signInWithEmailAndPassword(_this.state.username, _this.state.password).then(function () {\n        return this.App();\n      }).catch(function (error) {\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      });\n    };\n\n    _this.signUpButtonClickListner = function () {};\n\n    _this.forgotPasswordButtonClickListner = function () {};\n\n    _this.state = {\n      username: 'recoronejr@gmail.com',\n      password: 'Pa$$w0rd'\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.signintxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Sign In\"), React.createElement(View, {\n        rounded: true,\n        style: styles.usernamecontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Username\",\n        defaultValue: this.state.username,\n        style: styles.usernameinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        rounded: true,\n        style: styles.passwordcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Password\",\n        defaultValue: this.state.password,\n        style: styles.passwordinput,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      })), React.createElement(Button, {\n        title: \"Forgot Password\",\n        hasText: true,\n        transparent: true,\n        onPress: this.forgotPasswordButtonClickListner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, \"Forgot Password\")), React.createElement(Button, {\n        title: \"Login\",\n        rounded: true,\n        style: styles.loginbtn,\n        onPress: this.logInButtonClickListner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"Sign Up\",\n        hasText: true,\n        transparent: true,\n        style: styles.signupbtn,\n        onPress: this.signUpButtonClickListner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#717AF9'\n  },\n  loginbtn: {\n    alignSelf: 'center',\n    width: 50\n  },\n  signupbtn: {\n    alignSelf: 'center'\n  },\n  signintxt: {\n    paddingTop: 200,\n    paddingBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 18,\n    alignSelf: 'center'\n  },\n  usernameinput: {},\n  passwordinput: {},\n  passwordcontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  usernamecontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    marginTop: 20\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/user-management/Login.js"],"names":["React","Component","useState","Navigator","Item","white","firebase","App","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","Login","props","logInButtonClickListner","auth","signInWithEmailAndPassword","state","username","password","then","catch","error","errorMessage","message","console","log","signUpButtonClickListner","forgotPasswordButtonClickListner","styles","container","signintxt","usernamecontainer","usernameinput","passwordcontainer","passwordinput","loginbtn","signupbtn","StyleSheet","create","flex","backgroundColor","alignSelf","width","paddingTop","paddingBottom","fontWeight","fontSize","justifyContent","marginTop","flexDirection","bgImage","resizeMode"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Navigator, View, Item, Button, Text, StyleSheet,ImageBackground, TextInput, Image } from 'react-native';\nimport { white } from 'color-name';\nimport * as firebase from 'firebase';\nimport App from '../App';\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport default class Login extends Component {\n        \n    constructor(props) {\n        super(props)\n        this.state = {\n            username: 'recoronejr@gmail.com',\n            password: 'Pa$$w0rd',\n        }\n\n    }\n    logInButtonClickListner = () => {\n\n        firebase.auth().signInWithEmailAndPassword(this.state.username, this.state.password)\n        .then(function() {\n            // Sign in is successful with email and password\n            return this.App();\n        }) \n        .catch(function(error) {\n            // Handle Errors here.\n            var errorMessage = error.message\n            console.log(errorMessage); \n\n        });\n        // if (this.state.username == \"test\" && this.state.username == 'test') {\n        //     console.log(`Username is ${this.state.username}`);\n\n           \n        // }\n        // else {\n        //     console.log('Login Failed ');\n\n        // }\n        \n    }\n\n    signUpButtonClickListner = () => {}\n    forgotPasswordButtonClickListner = () => {}\n\n    render() {\n\n    return (\n        \n        <View style={styles.container}>\n            \n            <Text style ={styles.signintxt}>\n                Sign In\n            </Text>\n\n            <View  rounded style={styles.usernamecontainer}>\n                <TextInput placeholder='Username' defaultValue = {this.state.username} style={styles.usernameinput} />\n            </View>\n\n            <View rounded style={styles.passwordcontainer}>\n                <TextInput placeholder='Password' defaultValue = {this.state.password} style={styles.passwordinput}  secureTextEntry= {true} />\n             </View>\n\n            <Button title = 'Forgot Password' hasText transparent onPress={this.forgotPasswordButtonClickListner}>\n              <Text>Forgot Password</Text>\n            </Button>\n\n            <Button title = 'Login' rounded style={styles.loginbtn}  onPress={this.logInButtonClickListner}>\n        \n            </Button>\n\n            <Button title = 'Sign Up' hasText transparent style={styles.signupbtn} onPress={this.signUpButtonClickListner}>\n        \n            </Button>\n       \n\n        </View>\n       \n    );\n\n\n  }\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#717AF9',\n        \n    },\n    loginbtn: {\n        alignSelf: 'center',\n        width: 50,\n        \n    },\n    signupbtn: {\n        alignSelf: 'center',\n       \n    },\n    signintxt: {\n        paddingTop: 200,\n        paddingBottom: 50,\n        fontWeight: 'bold',\n        fontSize: 18,\n        alignSelf: 'center'\n    },\n    usernameinput: {\n       \n      \n\n    },\n    passwordinput: {\n        \n       \n        \n    },\n    passwordcontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        marginTop: 20,\n        \n        \n    },\n    usernamecontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        flexDirection: \"column\",\n        marginTop: 20,\n        \n       \n        \n    },\n    bgImage: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    }\n\n  });\n  "]},"metadata":{},"sourceType":"module"}
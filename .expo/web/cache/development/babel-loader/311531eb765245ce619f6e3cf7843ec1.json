{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/user_authentication/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { View, Item, Component, useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { white } from 'color-name';\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"<your-api-key>\",\n  authDomain: \"<your-auth-domain>\",\n  databaseURL: \"<your-database-url>\",\n  storageBucket: \"<your-storage-bucket>\"\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.buttonClickListner = function () {\n      if (_this.state.username == \"test\" && _this.state.username == 'test') {\n        console.log(\"Username is \" + _this.state.username);\n      } else {\n        console.log('Login Failed ');\n      }\n    };\n\n    _this.state = {\n      username: 'test',\n      password: 'test'\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.signintxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"Sign In\"), React.createElement(Item, {\n        rounded: true,\n        style: styles.usernamecontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Username\",\n        defaultValue: this.state.username,\n        style: styles.usernameinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        rounded: true,\n        style: styles.passwordcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Password\",\n        defaultValue: this.state.password,\n        style: styles.passwordinput,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      })), React.createElement(Button, {\n        hasText: true,\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"Forgot Password\")), React.createElement(Button, {\n        rounded: true,\n        style: styles.loginbtn,\n        onPress: this.buttonClickListner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Login\")), React.createElement(Button, {\n        hasText: true,\n        transparent: true,\n        style: styles.signupbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#717AF9'\n  },\n  loginbtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  signupbtn: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    color: '#ffffff'\n  },\n  signintxt: {\n    paddingTop: 200,\n    paddingBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 18,\n    alignSelf: 'center'\n  },\n  usernameinput: {\n    flex: 1\n  },\n  passwordinput: {\n    flex: 1\n  },\n  passwordcontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  usernamecontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    marginTop: 20\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/user_authentication/Login.js"],"names":["React","View","Item","Component","useState","Navigator","white","firebase","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","Login","props","buttonClickListner","state","username","console","log","password","styles","container","signintxt","usernamecontainer","usernameinput","passwordcontainer","passwordinput","loginbtn","signupbtn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","alignSelf","color","paddingTop","paddingBottom","fontWeight","fontSize","width","marginTop","flexDirection","bgImage","resizeMode"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,IAAtB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;SACSC,S;;;;;AACT,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAGA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,gBADW;AAEnBC,EAAAA,UAAU,EAAE,oBAFO;AAGnBC,EAAAA,WAAW,EAAE,qBAHM;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAAvB;AAME,IAAMC,WAAW,GAAGN,QAAQ,CAACO,aAAT,CAAuBN,cAAvB,CAApB;;IAEmBO,K;;;;;AAEjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAQfC,kBARe,GAQM,YAAM;AAE3B,UAAI,MAAKC,KAAL,CAAWC,QAAX,IAAuB,MAAvB,IAAiC,MAAKD,KAAL,CAAWC,QAAX,IAAuB,MAA5D,EAAoE;AAChEC,QAAAA,OAAO,CAACC,GAAR,kBAA2B,MAAKH,KAAL,CAAWC,QAAtC;AAGH,OAJD,MAKK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEH;AAEJ,KApBkB;;AAEf,UAAKH,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MADD;AAETG,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAOlB;;;;6BAeM;AAEP,aAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGD,MAAM,CAACE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFN,EAMM,oBAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,KAAK,EAAEF,MAAM,CAACG,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,UAAnB;AAA8B,QAAA,YAAY,EAAI,KAAKR,KAAL,CAAWC,QAAzD;AAAmE,QAAA,KAAK,EAAEI,MAAM,CAACI,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANN,EAUM,oBAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,KAAK,EAAEJ,MAAM,CAACK,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,UAAnB;AAA8B,QAAA,YAAY,EAAI,KAAKV,KAAL,CAAWI,QAAzD;AAAmE,QAAA,KAAK,EAAEC,MAAM,CAACM,aAAjF;AAAiG,QAAA,eAAe,EAAG,IAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVN,EAcM,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,WAAW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAdN,EAkBM,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,KAAK,EAAEN,MAAM,CAACO,QAA9B;AAAyC,QAAA,OAAO,EAAE,KAAKb,kBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CAlBN,EAsBM,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,WAAW,MAA3B;AAA4B,QAAA,KAAK,EAAEM,MAAM,CAACQ,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CAtBN,CAFF;AAkCD;;;;EA5DgC5B,S;;SAAdY,K;AAiErB,IAAMQ,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAM7BL,EAAAA,QAAQ,EAAE;AACNM,IAAAA,UAAU,EAAE,QADN;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,SAAS,EAAE;AAHL,GANmB;AAW7BP,EAAAA,SAAS,EAAE;AACPM,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,SAAS,EAAE,QAFJ;AAGPC,IAAAA,KAAK,EAAE;AAHA,GAXkB;AAgB7Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,UAAU,EAAE,GADL;AAEPC,IAAAA,aAAa,EAAE,EAFR;AAGPC,IAAAA,UAAU,EAAE,MAHL;AAIPC,IAAAA,QAAQ,EAAE,EAJH;AAKPL,IAAAA,SAAS,EAAE;AALJ,GAhBkB;AAuB7BX,EAAAA,aAAa,EAAE;AACZO,IAAAA,IAAI,EAAE;AADM,GAvBc;AA4B7BL,EAAAA,aAAa,EAAE;AACXK,IAAAA,IAAI,EAAE;AADK,GA5Bc;AAiC7BN,EAAAA,iBAAiB,EAAE;AACfU,IAAAA,SAAS,EAAE,QADI;AAEfH,IAAAA,eAAe,EAAE,SAFF;AAGfS,IAAAA,KAAK,EAAE,GAHQ;AAIfP,IAAAA,cAAc,EAAC,eAJA;AAKfQ,IAAAA,SAAS,EAAE;AALI,GAjCU;AA0C7BnB,EAAAA,iBAAiB,EAAE;AACfY,IAAAA,SAAS,EAAE,QADI;AAEfH,IAAAA,eAAe,EAAE,SAFF;AAGfS,IAAAA,KAAK,EAAE,GAHQ;AAIfP,IAAAA,cAAc,EAAC,eAJA;AAKfS,IAAAA,aAAa,EAAE,QALA;AAMfD,IAAAA,SAAS,EAAE;AANI,GA1CU;AAqD7BE,EAAAA,OAAO,EAAE;AACLb,IAAAA,IAAI,EAAE,CADD;AAELc,IAAAA,UAAU,EAAE,OAFP;AAGLX,IAAAA,cAAc,EAAE;AAHX;AArDoB,CAAlB,CAAf","sourcesContent":["import React, { View, Item,Component, useState } from 'react';\nimport { Navigator, StyleSheet,ImageBackground, TextInput, Image } from 'react-native';\nimport { white } from 'color-name';\nimport * as firebase from 'firebase';\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"<your-api-key>\",\n    authDomain: \"<your-auth-domain>\",\n    databaseURL: \"<your-database-url>\",\n    storageBucket: \"<your-storage-bucket>\",\n  };\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport default class Login extends Component {\n        \n    constructor(props) {\n        super(props)\n        this.state = {\n            username: 'test',\n            password: 'test',\n        }\n\n    }\n        buttonClickListner = () => {\n    \n        if (this.state.username == \"test\" && this.state.username == 'test') {\n            console.log(`Username is ${this.state.username}`);\n\n           \n        }\n        else {\n            console.log('Login Failed ');\n\n        }\n        \n    }\n\n  render() {\n\n    return (\n        \n      <View style={styles.container}>\n            {/* <ImageBackground source={require('../assets/cityimg.jpg')} style={styles.bgImage}> */}\n            <Text style ={styles.signintxt}>\n            Sign In\n            </Text>\n\n            <Item rounded style={styles.usernamecontainer}>\n                <Input placeholder='Username' defaultValue = {this.state.username} style={styles.usernameinput} />\n            </Item>\n\n            <Item rounded style={styles.passwordcontainer}>\n                <Input placeholder='Password' defaultValue = {this.state.password} style={styles.passwordinput}  secureTextEntry= {true} />\n             </Item>\n\n            <Button hasText transparent>\n              <Text>Forgot Password</Text>\n            </Button>\n\n            <Button rounded style={styles.loginbtn}  onPress={this.buttonClickListner}>\n            <Text>Login</Text>\n            </Button>\n\n            <Button hasText transparent style={styles.signupbtn}>\n            <Text>Sign Up</Text>\n          </Button>\n       \n       {/* </ImageBackground> */}\n      </View>\n       \n    );\n\n\n  }\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#717AF9',\n        \n    },\n    loginbtn: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center'\n    },\n    signupbtn: {\n        justifyContent: 'center',\n        alignSelf: 'center',\n        color: '#ffffff',\n    },\n    signintxt: {\n        paddingTop: 200,\n        paddingBottom: 50,\n        fontWeight: 'bold',\n        fontSize: 18,\n        alignSelf: 'center'\n    },\n    usernameinput: {\n       flex: 1,\n      \n\n    },\n    passwordinput: {\n        flex: 1,\n       \n        \n    },\n    passwordcontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        marginTop: 20,\n        \n        \n    },\n    usernamecontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        flexDirection: \"column\",\n        marginTop: 20,\n        \n       \n        \n    },\n    bgImage: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    }\n\n  });\n  "]},"metadata":{},"sourceType":"module"}
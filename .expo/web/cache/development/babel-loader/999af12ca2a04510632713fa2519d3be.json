{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return fetch('http://localhost:3000/getLocations').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Stack = createStackNavigator();\n      var locations = this.state.dataSource.map(function (val, key) {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Welcome'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 14\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          key: key,\n          style: styles.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, React.createElement(Button, {\n          title: val.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }\n        })));\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Button, {\n    title: \"Go to Reco's profile\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile', {\n        name: 'Reco'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  });\n};\n\nvar ProfileScreen = function ProfileScreen() {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, \"This is Reco's profile\");\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["StatusBar","React","firebase","NavigationContainer","createStackNavigator","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","App","props","state","isLoading","dataSource","fetch","then","response","json","responseJson","Stack","locations","map","val","key","HomeScreen","title","ProfileScreen","styles","item","name","Component","navigation","navigate","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n};\n\n\nexport default class App extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n        isLoading: true,\n        dataSource: null,\n    }\n  }\n\n  componentDidMount(){\n    return fetch('http://localhost:3000/getLocations')\n      .then( (response) => response.json())\n      .then( (responseJson) => {\n        \n      });\n    \n  }\n\n  render() {\n\n      const Stack = createStackNavigator();\n      let locations = this.state.dataSource.map((val,key) => {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator>\n             <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              options={{ title: 'Welcome' }}\n            />\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n          </Stack.Navigator>\n          <View key = {key} style = {styles.item}>\n            <Button title = {val.name}></Button>\n          </View>\n         </NavigationContainer>\n      );\n        \n      });\n\n     \n\n    }\n   \n  }\n\nconst HomeScreen = ({ navigation }) => {\n  return (\n    <Button\n      title=\"Go to Reco's profile\"\n      onPress={() =>\n        navigation.navigate('Profile', { name: 'Reco' })\n      }\n    />\n  );\n};\n\nconst ProfileScreen = () => {\n  return <Text>This is Reco's profile</Text>;\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { white } from 'color-name';\nimport App, { Stack } from \"../../App\";\nimport { signIn, errorMessage, sucessful, firebaseConfig } from \"../user-management/Firebase_Helper\";\nimport SignUpScreen from \"./SignUp\";\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { color } from 'react-native-reanimated';\nimport * as firebase from 'firebase';\nimport firestore from '@react-native-firebase/firestore';\nimport { render } from 'react-dom';\n\nvar _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n\nvar _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"setEmailValue\",\n    value: function setEmailValue(email) {\n      this.emailInput.current = email;\n    }\n  }, {\n    key: \"setPasswordValue\",\n    value: function setPasswordValue(password) {\n      this.passwordInput.current = password;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = firebase.auth().currentUser;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.signintxt,\n        title: \"Sign In\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"Sign In\"), React.createElement(TextInput, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        },\n        style: styles.emailInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Password\",\n        style: styles.passwordInput,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.loginbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Login\",\n        rounded: true,\n        style: styles.loginbtn,\n        onPress: function onPress() {\n          firebase.auth().signInWithEmailAndPassword(_this.emailInput, _this.passwordInput).then(function (cred) {\n            navigate(\"Main\");\n            reset();\n          }).catch(function (error) {\n            console.log(error.message);\n          });\n          reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.signupbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Sign Up\",\n        hasText: true,\n        transparent: true,\n        style: styles.signupbtn,\n        onPress: function onPress() {\n          return navigate('SignUp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\",\n    width: 300,\n    height: 300,\n    borderRadius: 20,\n    padding: 10,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowRadius: 10,\n    shadowOpacity: 1.0\n  },\n  loginbtn: {\n    marginTop: 10,\n    padding: 15,\n    borderRadius: 50\n  },\n  signupbtn: {\n    marginTop: 10\n  },\n  signintxt: {\n    marginTop: 10,\n    fontFamily: 'San Francisco',\n    fontWeight: \"bold\",\n    fontSize: 18,\n    alignSelf: \"center\",\n    marginBottom: 50\n  },\n  emailInput: {},\n  passwordInput: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js"],"names":["React","useState","Navigator","white","App","Stack","signIn","errorMessage","sucessful","firebaseConfig","SignUpScreen","auth","NavigationContainer","useNavigation","color","firebase","firestore","render","email","setEmail","password","setPassword","LoginScreen","props","emailInput","current","passwordInput","user","currentUser","navigate","navigation","styles","container","card","signintxt","loginbtn","signInWithEmailAndPassword","then","cred","reset","catch","error","console","log","message","signupbtn","Component","StyleSheet","create","width","Dimensions","get","height","alignItems","justifyContent","alignSelf","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowRadius","shadowOpacity","marginTop","fontFamily","fontWeight","fontSize","marginBottom"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;SACSC,S;;;;;;;;;AACT,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,GAAP,IAAcC,KAAd;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,SAA/B,EAA0CC,cAA1C;AACA,OAAOC,YAAP;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,0BAAnD;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB;;gBAE0BhB,QAAQ,CAAC,EAAD,C;;IAA3BiB,K;IAAOC,Q;;iBACkBlB,QAAQ,CAAC,EAAD,C;;IAAjCmB,Q;IAAUC,W;;IACIC,W;;;;;AAGjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAGlB;;;;kCAEaL,K,EAAO;AACjB,WAAKM,UAAL,CAAgBC,OAAhB,GAA0BP,KAA1B;AACH;;;qCACgBE,Q,EAAS;AACtB,WAAKM,aAAL,CAAmBD,OAAnB,GAA6BL,QAA7B;AACH;;;wCAEmB;AAChB,UAAMO,IAAI,GAAGZ,QAAQ,CAACJ,IAAT,GAAgBiB,WAA7B;AAEH;;;6BACQ;AAAA;;AAAA,UACiBC,QADjB,GACgC,KAAKN,KADrC,CACGO,UADH,CACiBD,QADjB;AAEL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAA+B,QAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAKI,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,OAAvB;AAA+B,QAAA,YAAY,EAAE,sBAAAhB,KAAK;AAAA,iBAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,SAAlD;AAAuE,QAAA,KAAK,EAAEa,MAAM,CAACP,UAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOI,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,UAAvB;AAAkC,QAAA,KAAK,EAAEO,MAAM,CAACL,aAAhD;AAA+D,QAAA,eAAe,EAAE,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,MAA7B;AAA8B,QAAA,KAAK,EAAEJ,MAAM,CAACI,QAA5C;AACI,QAAA,OAAO,EAAE,mBAAM;AACXpB,UAAAA,QAAQ,CAACJ,IAAT,GAAgByB,0BAAhB,CAA2C,KAAI,CAACZ,UAAhD,EAA2D,KAAI,CAACE,aAAhE,EAA+EW,IAA/E,CAAoF,UAAAC,IAAI,EAAI;AAIxFT,YAAAA,QAAQ,CAAC,MAAD,CAAR;AACAU,YAAAA,KAAK;AACR,WAND,EAOKC,KAPL,CAOW,UAAUC,KAAV,EAAiB;AAEpBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAEH,WAXL;AAYAL,UAAAA,KAAK;AACR,SAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,EA6BI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,MAA/B;AAAgC,QAAA,WAAW,MAA3C;AAA4C,QAAA,KAAK,EAAEd,MAAM,CAACc,SAA1D;AAAqE,QAAA,OAAO,EAAE;AAAA,iBAAMhB,QAAQ,CAAC,QAAD,CAAd;AAAA,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA7BJ,CADJ,CADJ;AAuCH;;;;EA5DoC7B,KAAK,CAAC8C,S;;SAA1BxB,W;AAiErB,IAAMS,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KADzB;AAEPG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAF1B;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BrB,EAAAA,IAAI,EAAE;AACFsB,IAAAA,SAAS,EAAE,QADT;AAEFF,IAAAA,UAAU,EAAE,QAFV;AAGFG,IAAAA,eAAe,EAAE,SAHf;AAIFP,IAAAA,KAAK,EAAE,GAJL;AAKFG,IAAAA,MAAM,EAAE,GALN;AAMFK,IAAAA,YAAY,EAAE,EANZ;AAOFC,IAAAA,OAAO,EAAE,EAPP;AAQFC,IAAAA,WAAW,EAAE,SARX;AASFC,IAAAA,YAAY,EAAE;AACVX,MAAAA,KAAK,EAAE,CADG;AAEVG,MAAAA,MAAM,EAAE;AAFE,KATZ;AAaFS,IAAAA,YAAY,EAAE,EAbZ;AAcFC,IAAAA,aAAa,EAAE;AAdb,GAPuB;AAuB7B3B,EAAAA,QAAQ,EAAE;AACN4B,IAAAA,SAAS,EAAE,EADL;AAENL,IAAAA,OAAO,EAAE,EAFH;AAGND,IAAAA,YAAY,EAAE;AAHR,GAvBmB;AA6B7BZ,EAAAA,SAAS,EAAE;AACPkB,IAAAA,SAAS,EAAE;AADJ,GA7BkB;AAiC7B7B,EAAAA,SAAS,EAAE;AACP6B,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,UAAU,EAAE,eAFL;AAGPC,IAAAA,UAAU,EAAE,MAHL;AAIPC,IAAAA,QAAQ,EAAE,EAJH;AAKPX,IAAAA,SAAS,EAAE,QALJ;AAMPY,IAAAA,YAAY,EAAE;AANP,GAjCkB;AAyC7B3C,EAAAA,UAAU,EAAE,EAzCiB;AA6C7BE,EAAAA,aAAa,EAAE;AACXqC,IAAAA,SAAS,EAAE;AADA;AA7Cc,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image, Dimensions, Platform } from 'react-native';\nimport { white } from 'color-name';\nimport App, { Stack } from '../../App';\nimport { signIn, errorMessage, sucessful, firebaseConfig } from '../user-management/Firebase_Helper';\nimport SignUpScreen from './SignUp';\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { color } from 'react-native-reanimated';\nimport * as firebase from 'firebase';\nimport firestore from '@react-native-firebase/firestore';\nimport { render } from 'react-dom';\n\nconst [email, setEmail] = useState('')\nconst [password, setPassword] = useState('')\nexport default class LoginScreen extends React.Component {\n    \n\n    constructor(props) {\n        super(props);\n            \n    }\n\n    setEmailValue(email) {\n        this.emailInput.current = email;\n    }\n    setPasswordValue(password){\n        this.passwordInput.current = password;\n    }\n\n    componentDidMount() {\n        const user = firebase.auth().currentUser;\n\n    }\n    render() {\n        const { navigation: { navigate } } = this.props;\n        return (\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <Text style={styles.signintxt} title=\"Sign In\">\n                        Sign In\n                    </Text>\n\n                    <TextInput placeholder='Email' onChangeText={email => setEmail(email)} style={styles.emailInput} />\n\n                    <TextInput placeholder='Password' style={styles.passwordInput} secureTextEntry={true} />\n\n\n                    {/* <Button title = 'Forgot Password' hasText transparent /> */}\n                    <View style={styles.loginbtn}>\n                        <Button title='Login' rounded style={styles.loginbtn}\n                            onPress={() => {\n                                firebase.auth().signInWithEmailAndPassword(this.emailInput,this.passwordInput).then(cred => {\n                                    // var userDocument = firestore()\n                                    //   .collection('Users')\n                                    //   .doc(cred.user.uid);\n                                    navigate(\"Main\")\n                                    reset()\n                                })\n                                    .catch(function (error) {\n                                        // Handle Errors here\n                                        console.log(error.message)\n\n                                    });\n                                reset()\n                            }} />\n                    </View>\n                    <View style={styles.signupbtn}>\n                        <Button title='Sign Up' hasText transparent style={styles.signupbtn} onPress={() => navigate('SignUp')} />\n                    </View>\n                </View>\n            </View>\n\n        );\n\n    }\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    card: {\n        alignSelf: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#ffffff\",\n        width: 300,\n        height: 300,\n        borderRadius: 20,\n        padding: 10,\n        shadowColor: '#000000',\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowRadius: 10,\n        shadowOpacity: 1.0\n    },\n    loginbtn: {\n        marginTop: 10,\n        padding: 15,\n        borderRadius: 50,\n\n    },\n    signupbtn: {\n        marginTop: 10,\n\n    },\n    signintxt: {\n        marginTop: 10,\n        fontFamily: 'San Francisco',\n        fontWeight: \"bold\",\n        fontSize: 18,\n        alignSelf: \"center\",\n        marginBottom: 50,\n    },\n    emailInput: {\n\n\n    },\n    passwordInput: {\n        marginTop: 10,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer, StackRouter } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./controller/user-management/Login\";\nvar Stack = createStackNavigator();\n\nvar App = function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Mobile Ordering App\",\n    component: AppLaunch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Welcome, '\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default App;\n\nvar AppLaunch = function AppLaunch() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Welcome \", user.email), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    style: styles.signOutButton,\n    title: \"Sign Out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Button, {\n    title: \"Go to Reco's profile\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile', {\n        name: 'Reco'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  });\n};\n\nvar LoginScreen = function LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  });\n};\n\nvar ProfileScreen = function ProfileScreen() {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }\n  }, \"This is Reco's profile\");\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  signOutButton: {\n    flex: 2\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["StatusBar","React","useState","useEffect","firebase","NavigationContainer","StackRouter","createStackNavigator","Login","Stack","App","AppLaunch","HomeScreen","title","ProfileScreen","LoginScreen","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","auth","email","styles","signOutButton","navigation","navigate","name","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer, StackRouter } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from './controller/user-management/Login';\nconst Stack = createStackNavigator();\nconst App = () => {\n    return (\n        <NavigationContainer>\n          <Stack.Navigator>\n            <Stack.Screen name = \"Mobile Ordering App\" \n              component = {AppLaunch}  \n            />\n            <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              options={{ title: 'Welcome, ' , }}\n            />\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </Stack.Navigator>\n         </NavigationContainer>\n      );\n}\n\nexport default App;\n//   componentDidMount(){\n    \n//     // return fetch('http://localhost:3000/getLocations')\n//     //   .then( (response) => response.json())\n//     //   .then( (responseJson) => {\n        \n//     //   });\n\n//   }\n      \n// }\n\nconst AppLaunch = () => {\n\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (!user) {\n    return (\n      <View>\n        <Login />\n      </View>\n    );\n  }\n  return (\n    <View>\n      <Text>Welcome {user.email}</Text>\n      <View>\n        <Button style = {styles.signOutButton} title = 'Sign Out'></Button>\n      </View>\n      \n    </View>\n  );\n\n};\n\n\nconst HomeScreen = ({ navigation }) => {\n  return (\n    <Button\n      title=\"Go to Reco's profile\"\n      onPress={() =>\n        navigation.navigate('Profile', { name: 'Reco' })\n      }\n    />\n  );\n};\n\nconst LoginScreen = ({ navigation }) => {\n  return <Login />\n};\nconst ProfileScreen = () => {\n  return <Text>This is Reco's profile</Text>;\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  signOutButton: {\n    flex: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
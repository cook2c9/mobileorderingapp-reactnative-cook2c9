{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tjhar\\\\Documents\\\\GitHub\\\\mobileorderingapp-reactnative\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthenticationNavigation from \"./src/navigation/AuthenticationNavigation\";\nimport MainNavigation from \"./src/navigation/MainNavigation\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport MainScreen from \"./src/screens/MainScreen\";\nimport AccountScreen from \"./src/screens/AccountScreen\";\nimport OrderScreen from \"./src/screens/OrderScreen\";\nimport { auth } from 'firebase';\n\nvar App = function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    return React.createElement(AuthenticationNavigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }\n    });\n  }\n\n  return React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/tjhar/Documents/GitHub/mobileorderingapp-reactnative/App.js"],"names":["React","useState","useEffect","NavigationContainer","createBottomTabNavigator","createStackNavigator","AuthenticationNavigation","MainNavigation","LoginScreen","SignUpScreen","MainScreen","AccountScreen","OrderScreen","auth","App","navigation","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,mBAAT,QAAmC,0BAAnC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,wBAAP;AACA,OAAOC,cAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AAEA,SAAQC,IAAR,QAAmB,UAAnB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBAEYd,QAAQ,CAAC,IAAD,CAFpB;AAAA;AAAA,MAErBe,YAFqB;AAAA,MAEPC,eAFO;;AAAA,mBAGJhB,QAAQ,EAHJ;AAAA;AAAA,MAGrBiB,IAHqB;AAAA,MAGfC,OAHe;;AAM5B,WAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,UAAU,GAAGR,IAAI,GAAGO,kBAAP,CAA0BA,kBAA1B,CAAnB;AACA,WAAOC,UAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIL,YAAJ,EAAkB,OAAO,IAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACT,WACG,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAGD;;AAED,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGD,CA3BD;;AA6BA,eAAeJ,GAAf;AAGA,IAAMQ,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button } from 'react-native';\r\nimport { NavigationContainer} from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport AuthenticationNavigation from './src/navigation/AuthenticationNavigation'\r\nimport MainNavigation from './src/navigation/MainNavigation';\r\n\r\nimport LoginScreen from './src/screens/LoginScreen';\r\nimport SignUpScreen from './src/screens/SignUpScreen';\r\nimport MainScreen from './src/screens/MainScreen';\r\nimport AccountScreen from './src/screens/AccountScreen';\r\nimport OrderScreen from './src/screens/OrderScreen';\r\n\r\nimport {auth} from 'firebase';\r\n\r\n\r\nconst App = ({navigation}) => {\r\n  // Set an initializing state whilst Firebase connects\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  // Handle user state changes\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber; // unsubscribe on unmount\r\n  }, []);\r\n\r\n  if (initializing) return null;\r\n\r\n  if (!user) {\r\n    return (\r\n       <AuthenticationNavigation/>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <MainNavigation/> \r\n  ); \r\n}\r\n\r\nexport default App;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
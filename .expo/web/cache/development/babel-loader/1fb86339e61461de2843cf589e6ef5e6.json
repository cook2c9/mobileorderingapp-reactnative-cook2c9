{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./user-management/Login\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\nvar user = firebase.auth().currentUser;\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return fetch('http://localhost:3000/getLocations').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Stack = createStackNavigator();\n\n      if (user == null) {\n        console.log(\"The login user is \" + user);\n        return React.createElement(Login, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Welcome'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Button, {\n    title: \"Go to Reco's profile\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile', {\n        name: 'Reco'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  });\n};\n\nvar ProfileScreen = function ProfileScreen() {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }\n  }, \"This is Reco's profile\");\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["StatusBar","React","firebase","NavigationContainer","createStackNavigator","Login","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","user","auth","currentUser","App","props","state","isLoading","dataSource","fetch","then","response","json","responseJson","Stack","console","log","HomeScreen","title","ProfileScreen","Component","navigation","navigate","name","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from './user-management/Login';\n\n// Initialize Firebase\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nlet user = firebase.auth().currentUser;\n\nexport default class App extends React.Component {\n  \n  constructor (props) {\n    super(props);\n    this.state = {\n        isLoading: true,\n        dataSource: null,\n    }\n    \n  }\n\n  componentDidMount(){\n\n    return fetch('http://localhost:3000/getLocations')\n      .then( (response) => response.json())\n      .then( (responseJson) => {\n        \n      });\n    \n  }\n\n  render() {\n\n      const Stack = createStackNavigator();\n      if (user == null) {\n        console.log(\"The login user is \" + user);\n        return <Login />\n      }\n      else {\n\n      \n      return (\n        <NavigationContainer>\n          <Stack.Navigator>\n             <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              options={{ title: 'Welcome' }}\n            />\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n            <Stack.Screen name=\"Login\" component={Login} />\n          </Stack.Navigator>\n         </NavigationContainer>\n      );\n\n      }\n        \n\n\n     \n\n    }\n   \n  }\n\nconst HomeScreen = ({ navigation }) => {\n  return (\n    <Button\n      title=\"Go to Reco's profile\"\n      onPress={() =>\n        navigation.navigate('Profile', { name: 'Reco' })\n      }\n    />\n  );\n};\n\nconst ProfileScreen = () => {\n  return <Text>This is Reco's profile</Text>;\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
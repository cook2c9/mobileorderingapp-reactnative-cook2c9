{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js\";\nimport React, { useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { white } from 'color-name';\nimport App, { Stack } from \"../../App\";\nimport { signIn, errorMessage, sucessful } from \"../user-management/Firebase_Helper\";\nimport SignUpScreen from \"./SignUp\";\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\n\nfunction LoginScreen(_ref) {\n  var navigate = _ref.navigation.navigate;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.signintxt,\n    title: \"Sign In\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), React.createElement(View, {\n    rounded: true,\n    style: styles.usernamecontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    defaultValue: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    style: styles.emailInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    rounded: true,\n    style: styles.passwordcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    defaultValue: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    style: styles.passwordinput,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), React.createElement(Button, {\n    title: \"Login\",\n    rounded: true,\n    style: styles.loginbtn,\n    onPress: function onPress() {\n      signIn(email, password);\n\n      if (sucessful == true) {\n        navigate(\"Main\");\n      } else {\n        console.log(errorMessage);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Sign Up\",\n    hasText: true,\n    transparent: true,\n    style: styles.signupbtn,\n    onPress: function onPress() {\n      return navigate('SignUp');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.signintxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: 300,\n    alignItems: center\n  },\n  loginbtn: {\n    alignSelf: 'center',\n    width: 50\n  },\n  signupbtn: {\n    alignSelf: 'center'\n  },\n  signintxt: {\n    paddingTop: 200,\n    paddingBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 18,\n    alignSelf: 'center'\n  },\n  emailInput: {},\n  passwordinput: {},\n  passwordcontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  usernamecontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    marginTop: 20\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js"],"names":["React","useState","Navigator","white","App","Stack","signIn","errorMessage","sucessful","SignUpScreen","auth","NavigationContainer","useNavigation","LoginScreen","navigate","navigation","email","setEmail","password","setPassword","styles","container","signintxt","usernamecontainer","emailInput","passwordcontainer","passwordinput","loginbtn","console","log","signupbtn","StyleSheet","create","flex","width","alignItems","center","alignSelf","paddingTop","paddingBottom","fontWeight","fontSize","backgroundColor","justifyContent","marginTop","flexDirection","bgImage","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image } from 'react-native';\nimport { white } from 'color-name';\nimport App, { Stack } from '../../App';\nimport { signIn, errorMessage, sucessful } from '../user-management/Firebase_Helper';\nimport SignUpScreen from './SignUp';\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\n\nfunction LoginScreen({ navigation: { navigate } }) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <View style={styles.container}>\n            <View>\n                <Text style={styles.signintxt} title=\"Sign In\">\n                    Sign In\n            </Text>\n\n                <View rounded style={styles.usernamecontainer}>\n                    <TextInput placeholder='Email' defaultValue={email} onChangeText={email => setEmail(email)} style={styles.emailInput} />\n                </View>\n\n                <View rounded style={styles.passwordcontainer}>\n                    <TextInput placeholder='Password' defaultValue={password} onChangeText={password => setPassword(password)} style={styles.passwordinput} secureTextEntry={true} />\n                </View>\n\n                {/* <Button title = 'Forgot Password' hasText transparent /> */}\n\n                <Button title='Login' rounded style={styles.loginbtn}\n                    onPress={() => {\n                        signIn(email, password)\n                        if (sucessful == true) {\n                            navigate(\"Main\")\n                        }\n                        else {\n                            console.log(errorMessage);\n                        }\n\n\n\n                    }} />\n\n                <Button title='Sign Up' hasText transparent style={styles.signupbtn} onPress={() => navigate('SignUp')} />\n\n                <Text style={styles.signintxt} >\n\n                </Text>\n            </View>\n        </View>\n\n    );\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: 300,\n        alignItems: center,\n\n    },\n    loginbtn: {\n        alignSelf: 'center',\n        width: 50,\n\n    },\n    signupbtn: {\n        alignSelf: 'center',\n\n    },\n    signintxt: {\n        paddingTop: 200,\n        paddingBottom: 50,\n        fontWeight: 'bold',\n        fontSize: 18,\n        alignSelf: 'center'\n    },\n    emailInput: {\n\n\n    },\n    passwordinput: {\n\n\n    },\n    passwordcontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent: \"space-between\",\n        marginTop: 20,\n\n\n    },\n    usernamecontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        marginTop: 20,\n\n\n\n    },\n    bgImage: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    }\n\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js\";\n\nimport React, { Component, useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { white } from 'color-name';\nimport App from \"../../App\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport firebaseUser from \"../user-management/Firebase_Helper\";\nexport var Login = function Login() {\n  logInButtonClickListner = function logInButtonClickListner() {\n    var firebase = new Firebase_Helper();\n    firebase.signIn(_this.state.email, _this.state.password);\n\n    if (firebase.errorMessage === 'none') {\n      console.log(firebaseUser);\n    } else {\n      console.log(firebase.errorMessage);\n    }\n  };\n\n  signUpButtonClickListner = function signUpButtonClickListner() {};\n\n  forgotPasswordButtonClickListner = function forgotPasswordButtonClickListner() {};\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.signintxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), React.createElement(View, {\n    rounded: true,\n    style: styles.usernamecontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Username\",\n    defaultValue: _this.state.username,\n    style: styles.usernameinput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    rounded: true,\n    style: styles.passwordcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    defaultValue: _this.state.password,\n    style: styles.passwordinput,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), React.createElement(Button, {\n    title: \"Forgot Password\",\n    hasText: true,\n    transparent: true,\n    onPress: _this.forgotPasswordButtonClickListner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Forgot Password\")), React.createElement(Button, {\n    title: \"Login\",\n    rounded: true,\n    style: styles.loginbtn,\n    onPress: _this.logInButtonClickListner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Sign Up\",\n    hasText: true,\n    transparent: true,\n    style: styles.signupbtn,\n    onPress: _this.signUpButtonClickListner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#717AF9'\n  },\n  loginbtn: {\n    alignSelf: 'center',\n    width: 50\n  },\n  signupbtn: {\n    alignSelf: 'center'\n  },\n  signintxt: {\n    paddingTop: 200,\n    paddingBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 18,\n    alignSelf: 'center'\n  },\n  usernameinput: {},\n  passwordinput: {},\n  passwordcontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  usernamecontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    marginTop: 20\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js"],"names":["React","Component","useState","Navigator","Item","white","App","NavigationContainer","firebaseUser","Login","logInButtonClickListner","firebase","Firebase_Helper","signIn","state","email","password","errorMessage","console","log","signUpButtonClickListner","forgotPasswordButtonClickListner","styles","container","signintxt","usernamecontainer","username","usernameinput","passwordcontainer","passwordinput","loginbtn","signupbtn","StyleSheet","create","flex","backgroundColor","alignSelf","width","paddingTop","paddingBottom","fontWeight","fontSize","justifyContent","marginTop","flexDirection","bgImage","resizeMode"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Navigator, View, Item, Button, Text, StyleSheet,ImageBackground, TextInput, Image } from 'react-native';\nimport { white } from 'color-name';\nimport App from '../../App';\nimport { NavigationContainer } from '@react-navigation/native';\nimport firebaseUser from '../user-management/Firebase_Helper';\n\n\nexport const Login = () => {\n    \n\n    logInButtonClickListner = () => {\n        const firebase = new Firebase_Helper()\n        firebase.signIn(this.state.email,this.state.password)\n        if (firebase.errorMessage === 'none' ) {\n           // Send to App.js \n            \n            console.log(firebaseUser)\n        }\n        else{\n            // Show error message\n            console.log(firebase.errorMessage);\n        }\n        \n        \n    }\n\n    signUpButtonClickListner = () => {}\n    forgotPasswordButtonClickListner = () => {}\n    \n    return (\n        \n        <View style={styles.container}>\n            \n            <Text style ={styles.signintxt}>\n                Sign In\n            </Text>\n\n            <View  rounded style={styles.usernamecontainer}>\n                <TextInput placeholder='Username' defaultValue = {this.state.username} style={styles.usernameinput} />\n            </View>\n\n            <View rounded style={styles.passwordcontainer}>\n                <TextInput placeholder='Password' defaultValue = {this.state.password} style={styles.passwordinput}  secureTextEntry= {true} />\n             </View>\n\n            <Button title = 'Forgot Password' hasText transparent onPress={this.forgotPasswordButtonClickListner}>\n              <Text>Forgot Password</Text>\n            </Button>\n\n            <Button title = 'Login' rounded style={styles.loginbtn}  onPress={this.logInButtonClickListner}>\n        \n            </Button>\n\n            <Button title = 'Sign Up' hasText transparent style={styles.signupbtn} onPress={this.signUpButtonClickListner}>\n        \n            </Button>\n       \n\n        </View>\n       \n    );\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#717AF9',\n        \n    },\n    loginbtn: {\n        alignSelf: 'center',\n        width: 50,\n        \n    },\n    signupbtn: {\n        alignSelf: 'center',\n       \n    },\n    signintxt: {\n        paddingTop: 200,\n        paddingBottom: 50,\n        fontWeight: 'bold',\n        fontSize: 18,\n        alignSelf: 'center'\n    },\n    usernameinput: {\n\n\n    },\n    passwordinput: {\n\n        \n    },\n    passwordcontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        marginTop: 20,\n        \n        \n    },\n    usernamecontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        flexDirection: \"column\",\n        marginTop: 20,\n        \n       \n        \n    },\n    bgImage: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    }\n\n  });\n  \n  export default Login"]},"metadata":{},"sourceType":"module"}
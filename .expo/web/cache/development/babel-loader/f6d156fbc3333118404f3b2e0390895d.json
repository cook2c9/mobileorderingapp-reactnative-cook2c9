{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Projects/mobileorderingapp-reactnative/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FirebaseController from \"./controller/user-management/Firebase_Helper\";\nimport MapScreen from \"./src/screens/Mapscreen\";\nimport OrderMenu from \"./src/screens/OrderMenu\";\nimport Location from \"./src/screens/Mapscreen\";\nvar Stack = createStackNavigator();\n\nvar MainScreen = function (_React$Component) {\n  _inherits(MainScreen, _React$Component);\n\n  var _super = _createSuper(MainScreen);\n\n  function MainScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MainScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false,\n      dataSource: null\n    };\n    return _this;\n  }\n\n  _createClass(MainScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }\n        }));\n      } else {\n        return React.createElement(Stack.Navigator, {\n          initialRouteName: \"MapScreen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"MapScreen\",\n          component: MapScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Locations\",\n          component: Location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"OrderMenu\",\n          component: OrderMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }]);\n\n  return MainScreen;\n}(React.Component);\n\nexport { MainScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  welcometxt: {\n    marginTop: 50\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Projects/mobileorderingapp-reactnative/Main.js"],"names":["React","SafeAreaView","Navigator","NavigationContainer","createStackNavigator","FirebaseController","MapScreen","OrderMenu","Location","Stack","MainScreen","props","state","isLoading","dataSource","navigate","navigation","styles","container","Component","StyleSheet","create","flex","welcometxt","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;SACSC,S;;;;;;;;;AACT,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,kBAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;IACqBM,U;;;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAFe;AAMlB;;;;wCACmB,CAEnB;;;6BAEQ;AAAA,UACiBC,QADjB,GACgC,KAAKJ,KADrC,CACGK,UADH,CACiBD,QADjB;;AAEL,UAAK,KAAKH,KAAL,CAAWC,SAAhB,EAA2B;AACvB,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAII,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADJ;AAMH,OAPD,MAQK;AACD,eACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,gBAAgB,EAAG,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,MAAP;AACA,UAAA,IAAI,EAAC,WADL;AAEA,UAAA,SAAS,EAAEZ,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAKI,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAEE,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,EAMI,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAED,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,CADJ;AAWH;AAEJ;;;;EArCmCP,KAAK,CAACmB,S;;SAAzBT,U;AAwCrB,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAE;AADH;AAJiB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { SafeAreaView } from 'react-navigation'\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image, Dimensions, ActivityIndicator } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FirebaseController from './controller/user-management/Firebase_Helper'\nimport MapScreen from './src/screens/Mapscreen';\nimport OrderMenu from './src/screens/OrderMenu';\nimport Location from \"./src/screens/Mapscreen\"\nconst Stack = createStackNavigator();\nexport default class MainScreen extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            dataSource: null,\n        }\n    }\n    componentDidMount() {\n      \n    }\n    \n    render() {\n        const { navigation: { navigate } } = this.props;\n        if  (this.state.isLoading) {\n            return (\n                <View style = {styles.container}>\n                  <ActivityIndicator />  \n                </View>\n                \n            );\n        } \n        else {\n            return (\n                <Stack.Navigator initialRouteName = \"MapScreen\">\n                    <Stack.Screen\n                    name=\"MapScreen\"\n                    component={MapScreen}\n                    />\n                    <Stack.Screen name=\"Locations\" component={Location} />\n                    <Stack.Screen name=\"OrderMenu\" component={OrderMenu} />\n                </Stack.Navigator>\n                \n            );  \n        }\n        \n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    welcometxt: {\n        marginTop: 50,\n    },\n   \n\n});\n"]},"metadata":{},"sourceType":"module"}
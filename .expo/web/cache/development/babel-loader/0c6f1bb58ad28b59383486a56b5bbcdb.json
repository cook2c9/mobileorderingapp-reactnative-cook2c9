{"ast":null,"code":"var SquareConnect = require('square-connect');\n\nvar defaultClient = SquareConnect.ApiClient.instance;\nvar oauth2 = defaultClient.authentications['oauth2'];\noauth2.accessToken = \"EAAAEIcD0M0yInfOwRwmH4GOoavCPcmM69rSOjcRFlqUCYIGLs_QIx6dubzrkApN\";\nvar apiCatalog = new SquareConnect.CatalogApi();\nexport function getCatalog() {\n  console.log(\"getCatalog Api called\");\n  var opts = {\n    'cursor': \"\",\n    'types': \"ITEM\"\n  };\n  apiCatalog.listCatalog(opts).then(function (data) {\n    var parsedJson = JSON.parse(JSON.stringify(data));\n    res.json(parsedJson.objects[1].item_data.name);\n    console.log(parsedJson.objects[1]);\n  }, function (error) {\n    console.error(error);\n    res.send(error);\n  });\n}","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/API_Helper.js"],"names":["SquareConnect","require","defaultClient","ApiClient","instance","oauth2","authentications","accessToken","apiCatalog","CatalogApi","getCatalog","console","log","opts","listCatalog","then","data","parsedJson","JSON","parse","stringify","res","json","objects","item_data","name","error","send"],"mappings":"AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AAGA,IAAIC,aAAa,GAAGF,aAAa,CAACG,SAAd,CAAwBC,QAA5C;AAGA,IAAIC,MAAM,GAAGH,aAAa,CAACI,eAAd,CAA8B,QAA9B,CAAb;AACAD,MAAM,CAACE,WAAP,GAAqB,kEAArB;AAEA,IAAIC,UAAU,GAAG,IAAIR,aAAa,CAACS,UAAlB,EAAjB;AAIA,OAAO,SAASC,UAAT,GAAsB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,MAAIC,IAAI,GAAG;AACV,cAAU,EADA;AAEV,aAAS;AAFC,GAAX;AAMHL,EAAAA,UAAU,CAACM,WAAX,CAAuBD,IAAvB,EAA6BE,IAA7B,CAAkC,UAASC,IAAT,EAAe;AAE7C,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAjB;AAGAK,IAAAA,GAAG,CAACC,IAAJ,CAASL,UAAU,CAACM,OAAX,CAAmB,CAAnB,EAAsBC,SAAtB,CAAgCC,IAAzC;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAU,CAACM,OAAX,CAAmB,CAAnB,CAAZ;AAEP,GARG,EAQD,UAASG,KAAT,EAAgB;AACXf,IAAAA,OAAO,CAACe,KAAR,CAAcA,KAAd;AACAL,IAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AACP,GAXG;AAaH","sourcesContent":["\n\nconst SquareConnect = require('square-connect');\n\n\nvar defaultClient = SquareConnect.ApiClient.instance;\n \n// Configure OAuth2 access token for authorization: oauth2\nvar oauth2 = defaultClient.authentications['oauth2'];\noauth2.accessToken = \"EAAAEIcD0M0yInfOwRwmH4GOoavCPcmM69rSOjcRFlqUCYIGLs_QIx6dubzrkApN\";\n \nvar apiCatalog = new SquareConnect.CatalogApi();\n\n\n    \nexport function getCatalog() {\n        console.log(\"getCatalog Api called\");\n       var opts = { \n        'cursor': \"\", // String | The pagination cursor returned in the previous response. Leave unset for an initial request. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.\n        'types': \"ITEM\" // String | An optional case-insensitive, comma-separated list of object types to retrieve, for example `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.  The legal values are taken from the CatalogObjectType enum: `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`, `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.\n      }; \n    \n    \n    apiCatalog.listCatalog(opts).then(function(data) {\n        // Parse into Javascript Object\n        var parsedJson = JSON.parse(JSON.stringify(data)) \n        // console.log('API called successfully. Returned data: ' + parsedJson);\n        // res.json(data)\n        res.json(parsedJson.objects[1].item_data.name)\n        console.log(parsedJson.objects[1])\n\n}, function(error) {\n        console.error(error);\n        res.send(error)\n});\n\n}\n"]},"metadata":{},"sourceType":"module"}
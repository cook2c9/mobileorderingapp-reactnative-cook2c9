{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\tjhar\\\\Documents\\\\GitHub\\\\mobileorderingapp-reactnative\\\\src\\\\screens\\\\Mapscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-navigation';\nimport Map from \"../components/Map\";\nimport OrderMenu from \"./MenuScreen\";\n\nvar MapScreen = function (_React$Component) {\n  _inherits(MapScreen, _React$Component);\n\n  var _super = _createSuper(MapScreen);\n\n  function MapScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MapScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      var merchant = {\n        id: item.merchant_id,\n        name: item.name\n      };\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"OrderMenu\", {\n            merchant: merchant,\n            menu: _this.state.menu[merchant.id].items\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Location, {\n        title: item.name,\n        address: item.address.address_line_1,\n        merchantId: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.state = {\n      locations: null,\n      menu: null\n    };\n    return _this;\n  }\n\n  _createClass(MapScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocations();\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations() {\n      var resp, respJson, _resp, _respJson;\n\n      return _regeneratorRuntime.async(function getLocations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.state.locations == [] || this.state.locations == null)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsLocations\"));\n\n            case 3:\n              resp = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 6:\n              respJson = _context.sent;\n              this.setState({\n                locations: respJson\n              });\n              _context.next = 0;\n              break;\n\n            case 10:\n              if (!(this.state.menu == [] || this.state.menu == null)) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsMenus\"));\n\n            case 13:\n              _resp = _context.sent;\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(_resp.json());\n\n            case 16:\n              _respJson = _context.sent;\n              this.setState({\n                menu: _respJson\n              });\n              _context.next = 10;\n              break;\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, React.createElement(Map, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, \"Locations\"), React.createElement(FlatList, {\n        data: this.state.locations,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MapScreen;\n}(React.Component);\n\nexport { MapScreen as default };\n\nvar Location = function Location(_ref2) {\n  var title = _ref2.title,\n      address = _ref2.address;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, title), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \" From \", address, \" \"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  },\n  item: {\n    marginTop: 20,\n    backgroundColor: '#ffffff',\n    alignSelf: \"center\",\n    width: \"75%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.36,\n    shadowRadius: 8,\n    elevation: 11,\n    borderRadius: 10,\n    borderWidth: 1\n  },\n  title: {}\n});","map":{"version":3,"sources":["C:/Users/tjhar/Documents/GitHub/mobileorderingapp-reactnative/src/screens/Mapscreen.js"],"names":["React","useState","render","TouchableOpacity","SafeAreaView","Map","OrderMenu","MapScreen","props","renderItem","item","merchant","id","merchant_id","name","navigation","navigate","menu","state","items","address","address_line_1","locations","getLocations","fetch","resp","json","respJson","setState","fontSize","Component","Location","title","modalVisible","setModalVisible","styles","StyleSheet","create","container","flex","backgroundColor","marginTop","alignSelf","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { View, Text, FlatList, StyleSheet, Button,  Modal, Alert, TouchableHighlight} from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport Map from '../components/Map'\r\nimport OrderMenu from './MenuScreen'\r\n\r\nexport default class MapScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            locations: null,\r\n            menu: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getLocations();\r\n    }\r\n    async getLocations() {\r\n        while(this.state.locations == [] || this.state.locations == null) {\r\n            let resp = await fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsLocations\")\r\n            let respJson = await resp.json()\r\n            this.setState({locations: respJson});\r\n        }\r\n        while(this.state.menu == [] || this.state.menu == null) {\r\n            let resp = await fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsMenus\")\r\n            let respJson = await resp.json()\r\n            this.setState({menu: respJson});\r\n        }\r\n    }\r\n    renderItem = ({ item }) => {\r\n        let merchant = {\r\n            id: item.merchant_id,\r\n            name: item.name,\r\n            \r\n        }\r\n        \r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    this.props.navigation.navigate(\"OrderMenu\", {\r\n                        merchant:merchant,\r\n                        menu: this.state.menu[merchant.id].items\r\n                    })\r\n                }}>\r\n                <Location title={item.name} address={item.address.address_line_1} merchantId={item.id}/>  \r\n            </TouchableOpacity>     \r\n        ) \r\n    }\r\n    render() {\r\n        const { navigate } = this.props.navigation;\r\n        return (\r\n            //Will return null until datasource is properly saved to state\r\n            <SafeAreaView>\r\n                <Map />\r\n                <Text style={{fontSize:40}}>Locations</Text>\r\n                <FlatList data={this.state.locations}\r\n                renderItem={this.renderItem}\r\n                />\r\n                \r\n            </SafeAreaView>\r\n        ) \r\n    }   \r\n}\r\n    const Location = ({title, address}) => {\r\n        const [modalVisible, setModalVisible] = useState(false);\r\n        return (\r\n            <View style={styles.item}>\r\n                <Text style={styles.title}>{title}</Text>\r\n                <Text> From {address} </Text>\r\n            </View> \r\n        )\r\n    }\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor:'#ffffff',\r\n    },\r\n    item: {\r\n        marginTop: 20,\r\n        backgroundColor:'#ffffff',\r\n        alignSelf:\"center\",\r\n        width:\"75%\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n\t        width: 0,\r\n\t        height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 8,\r\n        elevation: 11,\r\n        borderRadius:10,\r\n        borderWidth: 1,\r\n    },\r\n    title:{\r\n\r\n    }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
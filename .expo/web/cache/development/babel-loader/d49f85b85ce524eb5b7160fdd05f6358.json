{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer, StackRouter } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./controller/user-management/Login\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"onAuthChanged\",\n        component: AppLaunch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Welcome, '\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nvar AppLaunch = function AppLaunch() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Welcome \", user.email));\n};\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Button, {\n    title: \"Go to Reco's profile\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile', {\n        name: 'Reco'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  });\n};\n\nvar LoginScreen = function LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  });\n};\n\nvar ProfileScreen = function ProfileScreen() {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }\n  }, \"This is Reco's profile\");\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["StatusBar","React","useState","useEffect","firebase","NavigationContainer","StackRouter","createStackNavigator","Login","Stack","App","props","state","isLoading","dataSource","AppLaunch","HomeScreen","title","ProfileScreen","LoginScreen","Component","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","auth","email","navigation","navigate","name","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,0BAAjD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP;AACA,IAAMC,KAAK,GAAGF,oBAAoB,EAAlC;;IAIqBG,G;;;;;AACnB,eAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAFkB;AAMnB;;;;6BACS;AACR,aACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,eAArB;AACE,QAAA,SAAS,EAAIC,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEC,UAFb;AAGE,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EASE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADJ;AAiBD;;;;EA1B8BlB,KAAK,CAACmB,S;;SAAlBV,G;;AAyCrB,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBAGkBb,QAAQ,CAAC,IAAD,CAH1B;AAAA;AAAA,MAGfmB,YAHe;AAAA,MAGDC,eAHC;;AAAA,mBAIEpB,QAAQ,EAJV;AAAA;AAAA,MAIfqB,IAJe;AAAA,MAITC,OAJS;;AAOtB,WAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMuB,UAAU,GAAGtB,QAAQ,CAACuB,IAAT,GAAgBF,kBAAhB,CAAmCA,kBAAnC,CAAnB;AACA,WAAOC,UAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIL,YAAJ,EAAkB,OAAO,IAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACT,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeA,IAAI,CAACK,KAApB,CADF,CADF;AAMD,CAjCD;;AAkCA,IAAMZ,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBa,UAAiB,QAAjBA,UAAiB;AACrC,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aACPA,UAAU,CAACC,QAAX,CAAoB,SAApB,EAA+B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA/B,CADO;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATD;;AAWA,IAAMZ,WAAW,GAAG,SAAdA,WAAc,QAAoB;AAAA,MAAjBU,UAAiB,SAAjBA,UAAiB;AACtC,SAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAGA,IAAMX,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD,CAFD;;AAKA,IAAMc,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer, StackRouter } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from './controller/user-management/Login';\nconst Stack = createStackNavigator();\n\n\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n        isLoading: true,\n        dataSource: null,\n    }\n  }\n  render () {  \n    return (\n        <NavigationContainer>\n          <Stack.Navigator>\n            <Stack.Screen name = \"onAuthChanged\" \n              component = {AppLaunch}  \n            />\n            <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              options={{ title: 'Welcome, ' , }}\n            />\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </Stack.Navigator>\n         </NavigationContainer>\n      );\n    \n  }\n}\n\n//   componentDidMount(){\n    \n//     // return fetch('http://localhost:3000/getLocations')\n//     //   .then( (response) => response.json())\n//     //   .then( (responseJson) => {\n        \n//     //   });\n\n//   }\n      \n// }\n\nconst AppLaunch = () => {\n\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (!user) {\n    return (\n      <View>\n        <Login />\n      </View>\n    );\n  }\n\n  return (\n    <View>\n      <Text>Welcome {user.email}</Text>\n    </View>\n  );\n\n};\nconst HomeScreen = ({ navigation }) => {\n  return (\n    <Button\n      title=\"Go to Reco's profile\"\n      onPress={() =>\n        navigation.navigate('Profile', { name: 'Reco' })\n      }\n    />\n  );\n};\n\nconst LoginScreen = ({ navigation }) => {\n  return <Login />\n};\nconst ProfileScreen = () => {\n  return <Text>This is Reco's profile</Text>;\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
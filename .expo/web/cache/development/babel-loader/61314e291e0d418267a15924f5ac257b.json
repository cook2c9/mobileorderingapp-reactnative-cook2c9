{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js\";\nimport React, { useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { white } from 'color-name';\nimport App, { Stack } from \"../../App\";\nimport { signIn, errorMessage, sucessful } from \"../user-management/Firebase_Helper\";\nimport SignUpScreen from \"./SignUp\";\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { color } from 'react-native-reanimated';\n\nfunction LoginScreen(_ref) {\n  var navigate = _ref.navigation.navigate;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function reset() {\n    (function (email) {\n      return setEmail('');\n    });\n\n    (function (password) {\n      return setPassword('');\n    });\n\n    console.log(\"Email: \" + email + \", Password: \" + password + \" , Successfull: \" + sucess);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.signintxt,\n    title: \"Sign In\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    defaultValue: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    style: styles.emailInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    defaultValue: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    style: styles.passwordInput,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.loginbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Login\",\n    rounded: true,\n    style: styles.loginbtn,\n    onPress: function onPress() {\n      console.log(sucess);\n      signIn(email, password);\n\n      if (sucessful === true) {\n        console.log(\"Email: \" + email + \", Password: \" + password + \" , Successfull: \" + sucess);\n        navigate(\"Main\");\n        reset();\n      } else {\n        console.log(errorMessage);\n      }\n\n      console.log(\"Email: \" + email + \", Password: \" + password + \" , Successfull: \" + sucess);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.signupbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Sign Up\",\n    hasText: true,\n    transparent: true,\n    style: styles.signupbtn,\n    onPress: function onPress() {\n      return navigate('SignUp');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\",\n    width: 300,\n    height: 300,\n    borderRadius: 20,\n    padding: 10,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowRadius: 10,\n    shadowOpacity: 1.0\n  },\n  loginbtn: {\n    marginTop: 10,\n    padding: 15,\n    borderRadius: 50\n  },\n  signupbtn: {\n    marginTop: 10\n  },\n  signintxt: {\n    marginTop: 10,\n    fontFamily: 'San Francisco',\n    fontWeight: \"bold\",\n    fontSize: 18,\n    alignSelf: \"center\",\n    marginBottom: 50\n  },\n  emailInput: {},\n  passwordInput: {\n    marginTop: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js"],"names":["React","useState","Navigator","white","App","Stack","signIn","errorMessage","sucessful","SignUpScreen","auth","NavigationContainer","useNavigation","color","LoginScreen","navigate","navigation","email","setEmail","password","setPassword","reset","console","log","sucess","styles","container","card","signintxt","emailInput","passwordInput","loginbtn","signupbtn","StyleSheet","create","width","Dimensions","get","height","alignItems","justifyContent","alignSelf","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowRadius","shadowOpacity","marginTop","fontFamily","fontWeight","fontSize","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;SACSC,S;;;;;;;;;AACT,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,GAAP,IAAcC,KAAd;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,SAA/B;AACA,OAAOC,YAAP;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,0BAAnD;AACA,SAASC,KAAT,QAAsB,yBAAtB;;AAEA,SAASC,WAAT,OAAmD;AAAA,MAAdC,QAAc,QAA5BC,UAA4B,CAAdD,QAAc;;AAAA,kBAErBd,QAAQ,CAAC,EAAD,CAFa;AAAA;AAAA,MAExCgB,KAFwC;AAAA,MAEjCC,QAFiC;;AAAA,mBAGfjB,QAAQ,CAAC,EAAD,CAHO;AAAA;AAAA,MAGxCkB,QAHwC;AAAA,MAG9BC,WAH8B;;AAM/C,WAASC,KAAT,GAAiB;AACb,eAAAJ,KAAK;AAAA,aAAIC,QAAQ,CAAC,EAAD,CAAZ;AAAA,KAAL;;AACA,eAAAC,QAAQ;AAAA,aAAIC,WAAW,CAAC,EAAD,CAAf;AAAA,KAAR;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYN,KAAZ,GAAoB,cAApB,GAAqCE,QAArC,GAAgD,kBAAhD,GAAqEK,MAAjF;AAEH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAKI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,OAAvB;AAA+B,IAAA,YAAY,EAAEX,KAA7C;AAAoD,IAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAAvE;AAA4F,IAAA,KAAK,EAAEQ,MAAM,CAACI,UAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAkC,IAAA,YAAY,EAAEV,QAAhD;AAA0D,IAAA,YAAY,EAAE,sBAAAA,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAAhF;AAA2G,IAAA,KAAK,EAAEM,MAAM,CAACK,aAAzH;AAAwI,IAAA,eAAe,EAAE,IAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,MAA7B;AAA8B,IAAA,KAAK,EAAEN,MAAM,CAACM,QAA5C;AACI,IAAA,OAAO,EAAE,mBAAM;AACXT,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAlB,MAAAA,MAAM,CAACW,KAAD,EAAQE,QAAR,CAAN;;AACA,UAAIX,SAAS,KAAK,IAAlB,EAAwB;AACpBc,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYN,KAAZ,GAAoB,cAApB,GAAqCE,QAArC,GAAgD,kBAAhD,GAAqEK,MAAjF;AACAT,QAAAA,QAAQ,CAAC,MAAD,CAAR;AACAM,QAAAA,KAAK;AACR,OAJD,MAKK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,YAAZ;AACH;;AACDe,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYN,KAAZ,GAAoB,cAApB,GAAqCE,QAArC,GAAgD,kBAAhD,GAAqEK,MAAjF;AAEH,KAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,EA4BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,MAA/B;AAAgC,IAAA,WAAW,MAA3C;AAA4C,IAAA,KAAK,EAAEP,MAAM,CAACO,SAA1D;AAAqE,IAAA,OAAO,EAAE;AAAA,aAAMjB,QAAQ,CAAC,QAAD,CAAd;AAAA,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA5BJ,CADJ,CADJ;AAsCH;;AAED,IAAMU,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KADzB;AAEPG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAF1B;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7Bb,EAAAA,IAAI,EAAE;AACFc,IAAAA,SAAS,EAAE,QADT;AAEFF,IAAAA,UAAU,EAAE,QAFV;AAGFG,IAAAA,eAAe,EAAE,SAHf;AAIFP,IAAAA,KAAK,EAAE,GAJL;AAKFG,IAAAA,MAAM,EAAE,GALN;AAMFK,IAAAA,YAAY,EAAE,EANZ;AAOFC,IAAAA,OAAO,EAAE,EAPP;AAQFC,IAAAA,WAAW,EAAE,SARX;AASFC,IAAAA,YAAY,EAAE;AACVX,MAAAA,KAAK,EAAE,CADG;AAEVG,MAAAA,MAAM,EAAE;AAFE,KATZ;AAaFS,IAAAA,YAAY,EAAE,EAbZ;AAcFC,IAAAA,aAAa,EAAE;AAdb,GAPuB;AAuB7BjB,EAAAA,QAAQ,EAAE;AACNkB,IAAAA,SAAS,EAAE,EADL;AAENL,IAAAA,OAAO,EAAE,EAFH;AAGND,IAAAA,YAAY,EAAC;AAHP,GAvBmB;AA6B7BX,EAAAA,SAAS,EAAE;AACPiB,IAAAA,SAAS,EAAE;AADJ,GA7BkB;AAiC7BrB,EAAAA,SAAS,EAAE;AACPqB,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,UAAU,EAAE,eAFL;AAGPC,IAAAA,UAAU,EAAE,MAHL;AAIPC,IAAAA,QAAQ,EAAE,EAJH;AAKPX,IAAAA,SAAS,EAAE,QALJ;AAMPY,IAAAA,YAAY,EAAE;AANP,GAjCkB;AAyC7BxB,EAAAA,UAAU,EAAE,EAzCiB;AA6C7BC,EAAAA,aAAa,EAAE;AACXmB,IAAAA,SAAS,EAAE;AADA;AA7Cc,CAAlB,CAAf;AAkDA,eAAenC,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image, Dimensions, Platform } from 'react-native';\nimport { white } from 'color-name';\nimport App, { Stack } from '../../App';\nimport { signIn, errorMessage, sucessful } from '../user-management/Firebase_Helper';\nimport SignUpScreen from './SignUp';\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { color } from 'react-native-reanimated';\n\nfunction LoginScreen({ navigation: { navigate } }) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n\n    function reset() {\n        email => setEmail('');\n        password => setPassword('');\n        console.log(\"Email: \" + email + \", Password: \" + password + \" , Successfull: \" + sucess)\n\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.card}>\n                <Text style={styles.signintxt} title=\"Sign In\">\n                    Sign In\n                </Text>\n\n                <TextInput placeholder='Email' defaultValue={email} onChangeText={email => setEmail(email)} style={styles.emailInput} />\n\n                <TextInput placeholder='Password' defaultValue={password} onChangeText={password => setPassword(password)} style={styles.passwordInput} secureTextEntry={true} />\n\n\n                {/* <Button title = 'Forgot Password' hasText transparent /> */}\n                <View style={styles.loginbtn}>\n                    <Button title='Login' rounded style={styles.loginbtn}\n                        onPress={() => {\n                            console.log(sucess)\n                            signIn(email, password)\n                            if (sucessful === true) {\n                                console.log(\"Email: \" + email + \", Password: \" + password + \" , Successfull: \" + sucess)\n                                navigate(\"Main\")\n                                reset()\n                            }\n                            else {\n                                console.log(errorMessage);\n                            }\n                            console.log(\"Email: \" + email + \", Password: \" + password + \" , Successfull: \" + sucess)\n\n                        }} />\n                </View>\n                <View style={styles.signupbtn}>\n                    <Button title='Sign Up' hasText transparent style={styles.signupbtn} onPress={() => navigate('SignUp')} />\n                </View>\n            </View>\n        </View>\n\n    );\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,  \n        alignItems: \"center\",  \n        justifyContent: \"center\", \n    },\n    card: {\n        alignSelf: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#ffffff\",\n        width: 300,\n        height: 300,\n        borderRadius: 20,\n        padding: 10,\n        shadowColor: '#000000',\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowRadius: 10,\n        shadowOpacity: 1.0\n    },\n    loginbtn: {\n        marginTop: 10,\n        padding: 15,\n        borderRadius:50,\n    \n    },\n    signupbtn: {\n        marginTop: 10,\n\n    },\n    signintxt: {\n        marginTop: 10,\n        fontFamily: 'San Francisco',\n        fontWeight: \"bold\",\n        fontSize: 18,\n        alignSelf: \"center\",\n        marginBottom: 50,\n    },\n    emailInput: {\n       \n\n    },\n    passwordInput: {\n        marginTop: 10,\n    },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}
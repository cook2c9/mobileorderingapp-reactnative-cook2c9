{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from \"./Main\";\nimport SignUpScreen from \"./controller/user-management/SignUp\";\nimport LoginScreen from \"./controller/user-management/Login\";\nvar Stack = createStackNavigator();\nvar NavigationContainerTheme = {\n  dark: true,\n  colors: {\n    primary: 'rgb(255, 45, 85)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(199, 199, 204)',\n    notification: 'rgb(255, 69, 58)'\n  },\n  header: false\n};\n\nfunction App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    return React.createElement(NavigationContainer, {\n      theme: NavigationContainerTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      screenOptions: {\n        gestureEnabled: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Main\",\n      component: MainScreen,\n      options: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUpScreen,\n      initialParams: {\n        user: 'me'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    })));\n  } else {\n    React.createElement(LoginScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    });\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["React","useState","useEffect","firebase","NavigationContainer","useNavigation","createStackNavigator","MainScreen","SignUpScreen","LoginScreen","Stack","NavigationContainerTheme","dark","colors","primary","background","card","text","border","notification","header","App","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","auth","gestureEnabled"],"mappings":";;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAkD,0BAAlD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AACA,IAAMK,wBAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,IADyB;AAE/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,kBADH;AAENC,IAAAA,UAAU,EAAE,oBAFN;AAGNC,IAAAA,IAAI,EAAE,oBAHA;AAINC,IAAAA,IAAI,EAAE,iBAJA;AAKNC,IAAAA,MAAM,EAAE,oBALF;AAMNC,IAAAA,YAAY,EAAE;AANR,GAFuB;AAU/BC,EAAAA,MAAM,EAAE;AAVuB,CAAjC;;AAYA,SAASC,GAAT,GAAgB;AAAA,kBAE0BpB,QAAQ,CAAC,IAAD,CAFlC;AAAA;AAAA,MAEPqB,YAFO;AAAA,MAEOC,eAFP;;AAAA,mBAGUtB,QAAQ,EAHlB;AAAA;AAAA,MAGPuB,IAHO;AAAA,MAGDC,OAHC;;AAMd,WAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDrB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMyB,UAAU,GAAGxB,QAAQ,CAACyB,IAAT,GAAgBF,kBAAhB,CAAmCA,kBAAnC,CAAnB;AACA,WAAOC,UAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIL,YAAJ,EAAkB,OAAO,IAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACT,WACE,oBAAC,mBAAD;AACA,MAAA,KAAK,EAAEb,wBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,KAAD,CAAO,SAAP;AACA,MAAA,gBAAgB,EAAC,MADjB;AAEA,MAAA,aAAa,EAAE;AAAEkB,QAAAA,cAAc,EAAE;AAAlB,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEtB,UAFb;AAGE,MAAA,OAAO,EAAE,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EASA,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAEE,WAFb;AAGE,MAAA,OAAO,EAAE,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAcA,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAED,YAFb;AAGE,MAAA,aAAa,EAAE;AAAEgB,QAAAA,IAAI,EAAE;AAAR,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,CAHA,CADF;AA0BD,GA3BD,MA4BK;AACH,wBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AAEA;;AAEH,eAAeH,GAAf","sourcesContent":["\nimport React,{useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from './Main';\nimport SignUpScreen from './controller/user-management/SignUp';\nimport LoginScreen from './controller/user-management/Login'\n\nconst Stack = createStackNavigator();\nconst NavigationContainerTheme = {\n  dark: true,\n  colors: {\n    primary: 'rgb(255, 45, 85)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(199, 199, 204)',\n    notification: 'rgb(255, 69, 58)',\n  },\n  header: false,\n};\nfunction App () {\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (!user) {\n    return (\n      <NavigationContainer \n      theme={NavigationContainerTheme}\n      >\n      <Stack.Navigator\n      initialRouteName=\"Main\"\n      screenOptions={{ gestureEnabled: false }}\n    >\n      <Stack.Screen\n        name=\"Main\"\n        component={MainScreen}\n        options={{ }}\n      />  \n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ }}\n      />\n      <Stack.Screen\n        name=\"SignUp\"\n        component={SignUpScreen}\n        initialParams={{ user: 'me' }}\n      />\n    </Stack.Navigator>\n    </NavigationContainer>\n    );\n  }\n  else {\n    <LoginScreen />\n  }\n    \n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer, StackRouter } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./controller/user-management/Login\";\nimport { firebaseUser } from \"../mobileorderingapp-reactnative/controller/user-management/Firebase_Helper\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n    console.log(firebaseUser);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var Stack = createStackNavigator();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var num1 = 1;\n\n      if (num1 === 2) {\n        console.log(\"The login user is \" + num1);\n      } else {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Welcome'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Button, {\n    title: \"Go to Reco's profile\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile', {\n        name: 'Reco'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  });\n};\n\nvar LoginScreen = function LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  });\n};\n\nvar ProfileScreen = function ProfileScreen() {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  }, \"This is Reco's profile\");\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["StatusBar","React","firebase","NavigationContainer","StackRouter","createStackNavigator","Login","firebaseUser","App","props","state","isLoading","dataSource","console","log","Stack","num1","HomeScreen","title","ProfileScreen","LoginScreen","Component","navigation","navigate","name","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,0BAAjD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP;AACA,SAASC,YAAT;;IAGqBC,G;;;;;AACnB,eAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAMFC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AARoB;AASnB;;;;wCAEkB;AACjB,UAAMQ,KAAK,GAAGV,oBAAoB,EAAlC;AAOD;;;6BAEQ;AAGL,UAAMW,IAAI,GAAG,CAAb;;AACA,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBE,IAAnC;AAED,OAHD,MAIK;AAGL,eACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAEC,UAFb;AAGE,UAAA,OAAO,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAEC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF,CADF;AAcC;AAMF;;;;EArD4BnB,KAAK,CAACoB,S;;SAAlBb,G;;AAkErB,IAAMS,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBK,UAAiB,QAAjBA,UAAiB;AACrC,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aACPA,UAAU,CAACC,QAAX,CAAoB,SAApB,EAA+B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA/B,CADO;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATD;;AAWA,IAAMJ,WAAW,GAAG,SAAdA,WAAc,QAAoB;AAAA,MAAjBE,UAAiB,SAAjBA,UAAiB;AACtC,SAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAGA,IAAMH,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD,CAFD;;AAKA,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer, StackRouter } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from './controller/user-management/Login';\nimport { firebaseUser }from '../mobileorderingapp-reactnative/controller/user-management/Firebase_Helper';\n\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n        isLoading: true,\n        dataSource: null,\n    }\n\n  \n  console.log(firebaseUser);\n  }\n\n  componentDidMount(){\n    const Stack = createStackNavigator();\n    // return fetch('http://localhost:3000/getLocations')\n    //   .then( (response) => response.json())\n    //   .then( (responseJson) => {\n        \n    //   });\n    \n  }\n\n  render() {\n\n     \n      const num1 = 1\n      if (num1 === 2) {\n        console.log(\"The login user is \" + num1);\n\n      }\n      else {\n\n      \n      return (\n        <NavigationContainer>\n          <Stack.Navigator>\n            <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              options={{ title: 'Welcome' }}\n            />\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </Stack.Navigator>\n         </NavigationContainer>\n      );\n\n      }\n        \n\n\n     \n\n    }\n   \n\n\n\n\n\n\n\n\n\n}\n\nconst HomeScreen = ({ navigation }) => {\n  return (\n    <Button\n      title=\"Go to Reco's profile\"\n      onPress={() =>\n        navigation.navigate('Profile', { name: 'Reco' })\n      }\n    />\n  );\n};\n\nconst LoginScreen = ({ navigation }) => {\n  return <Login />\n};\nconst ProfileScreen = () => {\n  return <Text>This is Reco's profile</Text>;\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\tjhar\\\\Documents\\\\GitHub\\\\mobileorderingapp-reactnative\\\\src\\\\screens\\\\MenuScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { color } from 'react-native-reanimated';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nvar OrderMenu = function (_React$Component) {\n  _inherits(OrderMenu, _React$Component);\n\n  var _super = _createSuper(OrderMenu);\n\n  function OrderMenu(props) {\n    var _this;\n\n    _classCallCheck(this, OrderMenu);\n\n    _this = _super.call(this, props);\n\n    _this.onContentSizeChange = function (contentWidth, contentHeight) {\n      _this.setState({\n        screenHeight: contentHeight\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      var merchant = {\n        id: item.merchant_id,\n        name: item.name\n      };\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"OrderMenu\", {\n            merchant: merchant\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.state = {\n      menu: [],\n      menuItems: [],\n      menuImages: []\n    };\n    return _this;\n  }\n\n  _createClass(OrderMenu, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        menu: this.props.route.params.menu\n      });\n    }\n  }, {\n    key: \"getImageById\",\n    value: function getImageById(id) {\n      for (var i = 0; i < this.state.menuImages.length; i++) {\n        if (id == this.state.menuImages[i].id) {\n          return this.state.menuImages[i].image_data.url;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var items = [];\n      var images = [];\n\n      for (var i = 0; i < this.state.menu.length; i++) {\n        if (this.state.menu[i].type == \"ITEM\") {\n          items.push(this.state.menu[i]);\n        } else if (this.state.menu[i].type == \"IMAGE\") {\n          images.push(this.state.menu[i]);\n        }\n\n        this.setState({\n          menuItems: items\n        });\n        this.setState({\n          menuImages: images\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigate = this.props.navigation.navigate;\n      var scrollEnabled = true;\n      var menuItems = this.state.menuItems.map(function (val, key) {\n        var image = _this2.getImageById(val.image_id);\n\n        return React.createElement(TouchableOpacity, {\n          style: styles.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          key: key,\n          style: styles.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 28\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }\n        }, val.item_data.name), React.createElement(Image, {\n          style: styles.img,\n          source: {\n            uri: image\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: styles.desc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }, val.item_data.description)));\n      });\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, this.props.route.params.merchant.name), React.createElement(Text, {\n        style: {\n          fontSize: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, \"What would you like? \"), React.createElement(ScrollView, {\n        style: styles.scroll,\n        contentContainerStyle: styles.scrollview,\n        scrollEnabled: scrollEnabled,\n        onContentSizeChange: this.onContentSizeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, menuItems), React.createElement(TouchableOpacity, {\n        style: styles.orderBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          fontSize: 24,\n          textAlignVertical: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 59\n        }\n      }, \"Place Order Total: $0.00\")));\n    }\n  }]);\n\n  return OrderMenu;\n}(React.Component);\n\nexport { OrderMenu as default };\n\nvar MenuItem = function MenuItem() {\n  return React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Place Order\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  card: {\n    backgroundColor: '#ffffff',\n    width: '80%',\n    height: 240,\n    alignSelf: \"center\",\n    flexGrow: 1,\n    marginBottom: 10,\n    padding: 10\n  },\n  item: {\n    alignSelf: 'stretch'\n  },\n  desc: {\n    marginTop: 10\n  },\n  scrollview: {\n    flexGrow: 1\n  },\n  scroll: {\n    flex: 1\n  },\n  img: {\n    alignSelf: 'center',\n    width: '100%',\n    height: 100\n  },\n  orderBtn: {\n    height: 50,\n    backgroundColor: 'lightgray'\n  }\n});","map":{"version":3,"sources":["C:/Users/tjhar/Documents/GitHub/mobileorderingapp-reactnative/src/screens/MenuScreen.js"],"names":["React","useState","render","ScrollView","color","Dimensions","get","height","OrderMenu","props","onContentSizeChange","contentWidth","contentHeight","setState","screenHeight","renderItem","item","merchant","id","merchant_id","name","navigation","navigate","state","menu","menuItems","menuImages","route","params","i","length","image_data","url","items","images","type","push","scrollEnabled","map","val","key","image","getImageById","image_id","styles","card","fontSize","item_data","img","uri","desc","description","container","scroll","scrollview","orderBtn","alignSelf","textAlignVertical","Component","MenuItem","title","StyleSheet","create","flex","backgroundColor","width","flexGrow","marginBottom","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { View, Text, FlatList, StyleSheet, Button, TouchableOpacity, Image, Dimensions, SafeAreaView} from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { color } from 'react-native-reanimated';\r\n\r\nconst {height} = Dimensions.get('window')\r\n\r\nexport default class OrderMenu extends React.Component {\r\n    onContentSizeChange = (contentWidth, contentHeight) => {\r\n        // Save the content height in state\r\n        this.setState({ screenHeight: contentHeight });\r\n    };\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            menu: [],\r\n            menuItems: [],\r\n            menuImages: [],\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.setState({menu:this.props.route.params.menu})\r\n    }\r\n    getImageById(id){\r\n        for (var i = 0; i < this.state.menuImages.length; i++) {\r\n            if (id == this.state.menuImages[i].id) {\r\n                return this.state.menuImages[i].image_data.url\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let items = [];\r\n        let images = [];\r\n\r\n        for (var i = 0; i < this.state.menu.length; i++) {\r\n            if (this.state.menu[i].type == \"ITEM\") {\r\n                items.push(this.state.menu[i])\r\n            }\r\n            else if (this.state.menu[i].type == \"IMAGE\") {\r\n                images.push(this.state.menu[i])\r\n            }\r\n            this.setState({menuItems: items});\r\n            this.setState({menuImages: images});\r\n        }\r\n    }\r\n    renderItem = ({ item }) => {\r\n        let merchant = {\r\n            id: item.merchant_id,\r\n            name: item.name,\r\n        }\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    this.props.navigation.navigate(\"OrderMenu\", {merchant})\r\n                }}>\r\n            </TouchableOpacity>\r\n                \r\n        ) \r\n    }\r\n    render() {\r\n        const { navigation: { navigate } } = this.props;\r\n        const scrollEnabled = true;\r\n        let menuItems = this.state.menuItems.map((val,key) => {\r\n            let image = this.getImageById(val.image_id)\r\n            return (\r\n                <TouchableOpacity style={styles.item}>\r\n                    <View key={key} style={styles.card}>\r\n                            <Text style={{fontSize:28}}>{val.item_data.name}</Text>\r\n                            <Image style={styles.img} source={{uri:image}}/>\r\n                            <Text style={styles.desc}>{val.item_data.description}</Text>\r\n                    </View> \r\n                </TouchableOpacity>\r\n            ) \r\n        });\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n                <Text style={{fontSize:40}}>{this.props.route.params.merchant.name}</Text>\r\n                <Text style={{fontSize:32}}>What would you like? </Text>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollview} scrollEnabled={scrollEnabled} onContentSizeChange={this.onContentSizeChange}>\r\n                    \r\n                    {menuItems}    \r\n                </ScrollView> \r\n                <TouchableOpacity style={styles.orderBtn}><Text style={{alignSelf: 'center',fontSize:24,textAlignVertical:'center'}}>Place Order Total: $0.00</Text></TouchableOpacity>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n}\r\nconst MenuItem = () => (\r\n        <View style={styles.item}>\r\n            <Text style={styles.title}></Text>\r\n            <Button title=\"Place Order\"/>\r\n            \r\n        </View> \r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n    },\r\n    card: {\r\n        backgroundColor: '#ffffff',\r\n        width: '80%',\r\n        height: 240,\r\n        alignSelf: \"center\",\r\n        flexGrow: 1,\r\n        marginBottom: 10,\r\n        padding: 10,\r\n    },\r\n    item:{\r\n        alignSelf:'stretch'\r\n    },\r\n    desc: {\r\n        marginTop: 10,\r\n    },\r\n    scrollview: {\r\n        flexGrow:1,\r\n    },\r\n    scroll: {\r\n        flex:1,\r\n    },\r\n    img: {\r\n        alignSelf: 'center',\r\n        width: '100%',\r\n        height: 100\r\n    },\r\n    orderBtn: {\r\n        height:50,\r\n        backgroundColor: 'lightgray',\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Projects/mobileorderingapp-reactnative/src/screens/Mapscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { SafeAreaView } from 'react-navigation';\nimport Map from \"../components/Map\";\nimport OrderMenu from \"../screens/OrderMenu\";\n\nvar MapScreen = function (_React$Component) {\n  _inherits(MapScreen, _React$Component);\n\n  var _super = _createSuper(MapScreen);\n\n  function MapScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MapScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      locations: null\n    };\n    return _this;\n  }\n\n  _createClass(MapScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocations();\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations() {\n      var resp, respJson;\n      return _regeneratorRuntime.async(function getLocations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsLocations\"));\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 5:\n              respJson = _context.sent;\n              this.setState({\n                locations: respJson\n              });\n              console.warn(this.state.locations);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(SafeAreaView, {\n        forceInset: {\n          top: 'always'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, React.createElement(Map, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"Locations\"), React.createElement(FlatList, {\n        data: (this.state.locations, navigate),\n        renderItem: renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MapScreen;\n}(React.Component);\n\nexport { MapScreen as default };\n\nvar Location = function Location(_ref) {\n  var title = _ref.title,\n      address = _ref.address,\n      merchantId = _ref.merchantId;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var id = {\n    merchantId: merchantId\n  };\n  return React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, title), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \" From \", address, \" \"), React.createElement(Button, {\n    title: \"Place Order\",\n    onPress: function onPress() {\n      navigate(\"OrderMenu\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Hello World!\"), React.createElement(TouchableHighlight, {\n    style: {\n      backgroundColor: \"#2196F3\"\n    },\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Hide Modal\"))))));\n};\n\nvar renderItem = function renderItem(_ref2) {\n  var item = _ref2.item;\n  return React.createElement(Location, {\n    title: item.name,\n    address: item.address.address_line_1,\n    merchantId: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  },\n  item: {\n    marginTop: 20,\n    backgroundColor: '#ffffff',\n    alignSelf: \"center\",\n    width: \"75%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.36,\n    shadowRadius: 8,\n    elevation: 11,\n    borderRadius: 10,\n    borderWidth: 1\n  },\n  title: {}\n});","map":{"version":3,"sources":["/Users/recogunnels/Projects/mobileorderingapp-reactnative/src/screens/Mapscreen.js"],"names":["React","useState","render","SafeAreaView","Map","OrderMenu","MapScreen","props","state","locations","getLocations","fetch","resp","json","respJson","setState","console","warn","navigate","navigation","top","fontSize","renderItem","Component","Location","title","address","merchantId","modalVisible","setModalVisible","id","styles","item","Alert","alert","backgroundColor","name","address_line_1","StyleSheet","create","container","flex","marginTop","alignSelf","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { View, Text, FlatList, StyleSheet, Button,  Modal, Alert, TouchableHighlight} from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport Map from '../components/Map'\nimport OrderMenu from '../screens/OrderMenu'\n\nexport default class MapScreen extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            locations: null,\n        }\n    }\n    componentDidMount() {\n        this.getLocations();\n    }\n    async getLocations() {\n        let resp = await fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsLocations\")\n        let respJson = await resp.json()\n        this.setState({locations: respJson});\n        console.warn(this.state.locations)\n    }\n    render() {\n        const { navigate } = this.props.navigation;\n        return (\n            //Will return null until datasource is properly saved to state\n            <SafeAreaView forceInset={{top:'always'}}>\n                <Map />\n                <Text style={{fontSize:40}}>Locations</Text>\n                <FlatList data={this.state.locations, navigate}\n                renderItem={renderItem}\n                />\n                \n            </SafeAreaView>\n        ) \n    }   \n}\n    const Location = ({title, address, merchantId}) => {\n        const [modalVisible, setModalVisible] = useState(false);\n        const id = {merchantId}\n        return (\n            <View style={styles.item}>\n                <Text style={styles.title}>{title}</Text>\n                <Text> From {address} </Text>\n                <Button title=\"Place Order\"\n                onPress={() => {   \n                    // Send Merchant ID \n                    navigate(\"OrderMenu\")\n                \n                }}\n                />\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                    Alert.alert(\"Modal has been closed.\");\n                    }}\n                >\n                    <View>\n                    <View>\n                        <Text>Hello World!</Text>\n\n                        <TouchableHighlight\n                        style={{ backgroundColor: \"#2196F3\" }}\n                        onPress={() => {\n                            setModalVisible(!modalVisible);\n                        }}\n                        >\n                        <Text>Hide Modal</Text>\n                        </TouchableHighlight>\n                    </View>\n                    </View>\n                </Modal>\n            </View> \n        )\n    }\nconst renderItem = ({ item }) => (\n    <Location title={item.name} address={item.address.address_line_1} merchantId={item.id}/>\n);\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor:'#ffffff',\n    },\n    item: {\n        marginTop: 20,\n        backgroundColor:'#ffffff',\n        alignSelf:\"center\",\n        width:\"75%\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n\t        width: 0,\n\t        height: 5,\n        },\n        shadowOpacity: 0.36,\n        shadowRadius: 8,\n        elevation: 11,\n        borderRadius:10,\n        borderWidth: 1,\n    },\n    title:{\n\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}
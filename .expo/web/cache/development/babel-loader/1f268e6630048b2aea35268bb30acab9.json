{"ast":null,"code":"import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport App from \"../../App\";\nimport firestore from '@react-native-firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nexport var firebaseApp = firebase.initializeApp(firebaseConfig);\nvar sucessful = true;\nvar userDocument;\nexport function signIn(email, password) {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(function (cred) {\n    userDocument = firestore().collection('Users').doc(cred.user.uid);\n  }).catch(function (error) {\n    errorMessage = error.message;\n  });\n}\n;\nexport var userDocument;\nexport var uid;\nexport function signUp() {\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(function (cred) {\n    console.log('User account created & signed in!');\n    uid = cred.user.uid;\n    userDocument = firestore.collection('Users').doc(cred.user.uid);\n  }).catch(function (error) {\n    if (error.code === 'auth/email-already-in-use') {\n      console.log('That email address is already in use!');\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n    }\n\n    console.error(error);\n  });\n}\nexport function signOut() {\n  auth().signOut().then(function () {\n    return sucessful = true;\n  }).then(function () {\n    return console.log('User signed out!');\n  });\n}\nexport var errorMessage = \"\";\nexport var sucessful;\nexport var firebaseUser = firebase.auth().currentUser;\nexport function setFirstName(firstName) {\n  userDocument = firestore().collection('Users').doc(uid).set({\n    firstName: firstName\n  });\n}\nexport function setLastName(lastName) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    lastName: lastName\n  });\n}\nexport function setPhoneNumber(phoneNumber) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    phoneNumber: phoneNumber\n  });\n}\nexport function setEmail(email) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    email: email\n  });\n}\nexport function setPassword(password) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    password: password\n  });\n}","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Firebase_Helper.js"],"names":["React","useState","firebase","App","firestore","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","sucessful","userDocument","signIn","email","password","auth","signInWithEmailAndPassword","then","cred","collection","doc","user","uid","catch","error","errorMessage","message","signUp","createUserWithEmailAndPassword","console","log","code","signOut","firebaseUser","currentUser","setFirstName","firstName","set","setLastName","lastName","setPhoneNumber","phoneNumber","setEmail","setPassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport App from '../../App';\nimport firestore from '@react-native-firebase/firestore';\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nvar sucessful = true;\nvar userDocument;\nexport function signIn(email,password) {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(cred => {\n    userDocument = firestore()\n      .collection('Users')\n      .doc(cred.user.uid);\n  })\n  .catch(function(error) {\n    // Handle Errors here\n    errorMessage = error.message\n\n  });              \n};\n\nexport var userDocument;\nexport var uid;\nexport function signUp(){\n  firebase.auth()\n  .createUserWithEmailAndPassword(email, password)\n  .then(cred => {\n    console.log('User account created & signed in!');\n    uid = cred.user.uid\n    userDocument = firestore.collection('Users').doc(cred.user.uid);\n  })\n  .catch(error => {\n    if (error.code === 'auth/email-already-in-use') {\n    \n      console.log('That email address is already in use!');\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n    }\n\n    console.error(error);\n  });\n}\nexport function signOut() {\n  auth()\n  .signOut()\n  .then(() => sucessful = true)\n  .then(() => console.log('User signed out!'));\n}\nexport var errorMessage = \"\";\nexport var sucessful;\nexport const firebaseUser = firebase.auth().currentUser;\n\nexport function setFirstName (firstName) {\n  userDocument = firestore().collection('Users').doc(uid).set({\n    firstName: firstName\n  })\n}\nexport function setLastName (lastName) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    lastName: lastName\n  })\n}\nexport function setPhoneNumber (phoneNumber) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    phoneNumber: phoneNumber\n  })\n}\nexport function setEmail (email) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    email: email\n  })\n}\nexport function setPassword(password) {\n  userDocument = firestore.collection('Users').doc(uid).set({\n    password: password\n  })\n}\n"]},"metadata":{},"sourceType":"module"}
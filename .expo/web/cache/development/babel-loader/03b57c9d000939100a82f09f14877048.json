{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from \"./Main\";\nimport SignUpScreen from \"./controller/user-management/SignUp\";\nimport LoginScreen from \"./controller/user-management/Login\";\nvar Stack = createStackNavigator();\n\nfunction App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function showMain() {\n    navigation.navigate('Main');\n  }\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    showMain();\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Welcome \"), React.createElement(Button, {\n    style: styles.signOutButton,\n    title: \"Sign Out\",\n    onPress: function onPress() {\n      return firebase.auth().signOut().then(function () {\n        return console.log('User signed out!');\n      }).then(function () {\n        return navigation.navigate('Login');\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Main\",\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    options: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUpScreen,\n    initialParams: {\n      user: 'me'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["React","useState","useEffect","firebase","NavigationContainer","useNavigation","createStackNavigator","MainScreen","SignUpScreen","LoginScreen","Stack","App","initializing","setInitializing","user","setUser","showMain","navigation","navigate","onAuthStateChanged","subscriber","auth","styles","signOutButton","signOut","then","console","log","gestureEnabled"],"mappings":";;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAkD,0BAAlD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;;AAEA,SAASK,GAAT,GAAgB;AAAA,kBAE0BV,QAAQ,CAAC,IAAD,CAFlC;AAAA;AAAA,MAEPW,YAFO;AAAA,MAEOC,eAFP;;AAAA,mBAGUZ,QAAQ,EAHlB;AAAA;AAAA,MAGPa,IAHO;AAAA,MAGDC,OAHC;;AAKd,WAASC,QAAT,GAAoB;AAClBC,IAAAA,UAAU,CAACC,QAAX,CAAoB,MAApB;AACD;;AAED,WAASC,kBAAT,CAA4BL,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,UAAU,GAAGjB,QAAQ,CAACkB,IAAT,GAAgBF,kBAAhB,CAAmCA,kBAAnC,CAAnB;AACA,WAAOC,UAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIR,YAAJ,EAAkB,OAAO,IAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACTE,IAAAA,QAAQ;AACT;;AACC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAIM,MAAM,CAACC,aAAxB;AACA,IAAA,KAAK,EAAG,UADR;AAEA,IAAA,OAAO,EAAE;AAAA,aACPpB,QAAQ,CAACkB,IAAT,GACCG,OADD,GAECC,IAFD,CAEM;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;AAAA,OAFN,EAGCF,IAHD,CAGM;AAAA,eAAMR,UAAU,CAACC,QAAX,CAAoB,OAApB,CAAN;AAAA,OAHN,CADO;AAAA,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAeA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD,CAAO,SAAP;AACA,IAAA,gBAAgB,EAAC,MADjB;AAEA,IAAA,aAAa,EAAE;AAAEU,MAAAA,cAAc,EAAE;AAAlB,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAErB,UAFb;AAGE,IAAA,OAAO,EAAE,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EASA,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEE,WAFb;AAGE,IAAA,OAAO,EAAE,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,EAcA,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAED,YAFb;AAGE,IAAA,aAAa,EAAE;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdA,CADA,CADF;AAwBD;;AAEH,eAAeH,GAAf","sourcesContent":["\nimport React,{useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from './Main';\nimport SignUpScreen from './controller/user-management/SignUp';\nimport LoginScreen from './controller/user-management/Login'\n\nconst Stack = createStackNavigator();\n\nfunction App () {\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  function showMain() {\n    navigation.navigate('Main');\n  }\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (!user) {\n    showMain()\n  }\n    return (\n      <View>\n        <Text>Welcome </Text>\n        <Button style = {styles.signOutButton} \n        title = 'Sign Out' \n        onPress={() =>\n          firebase.auth()\n          .signOut()\n          .then(() => console.log('User signed out!'))\n          .then(() => navigation.navigate('Login') )\n        }/>\n      \n      \n      </View>\n    )\n    return (\n      <NavigationContainer>\n      <Stack.Navigator\n      initialRouteName=\"Main\"\n      screenOptions={{ gestureEnabled: false }}\n    >\n      <Stack.Screen\n        name=\"Main\"\n        component={MainScreen}\n        options={{ }}\n      />  \n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ }}\n      />\n      <Stack.Screen\n        name=\"SignUp\"\n        component={SignUpScreen}\n        initialParams={{ user: 'me' }}\n      />\n    </Stack.Navigator>\n    </NavigationContainer>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
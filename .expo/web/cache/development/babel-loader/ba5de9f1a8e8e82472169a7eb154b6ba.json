{"ast":null,"code":"import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport App from \"../../App\";\nimport firestore from '@react-native-firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  projectId: 'mobileorderingapp-cfe7f',\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nexport var firebaseApp = firebase.initializeApp(firebaseConfig);\nvar sucessful = true;\nvar userDocument;\nvar db = firebase.firestore();\nexport function signIn(email, password) {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(function (cred) {\n    userDocument = firestore().collection('Users').doc(cred.user.uid);\n  }).catch(function (error) {\n    errorMessage = error.message;\n  });\n}\n;\nexport var userDocument;\nexport var uid;\nexport function addUserTest() {\n  db.collection('Users').add({\n    name: 'Ada Lovelace',\n    age: 30\n  }).then(function () {\n    console.log('User added!');\n  });\n}\nexport function addUserDocument(uid, firstName, lastName, phoneNumber, email, password) {\n  db.collection('Users').add({\n    firstName: firstName,\n    lastName: lastName,\n    phoneNumber: phoneNumber,\n    email: email,\n    password: password\n  }).then(function () {\n    console.log('User added!');\n  });\n}\nexport function signUp(email, password) {\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(function (cred) {\n    console.log('User account created & signed in!');\n    userDocument = db.collection('Users').doc(cred.user.uid);\n    console.log(cred.user.uid);\n    uid = cred.user.uid;\n    console.log(uid);\n  }).catch(function (error) {\n    if (error.code === 'auth/email-already-in-use') {\n      console.log('That email address is already in use!');\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n    }\n\n    console.error(error);\n  });\n}\nexport function signOut() {\n  firebase.auth().signOut().then(function () {\n    return sucessful = true;\n  }).then(function () {\n    return console.log('User signed out!');\n  });\n}\nexport var errorMessage = \"\";\nexport var sucessful;\nexport var firebaseUser = firebase.auth().currentUser;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Firebase_Helper.js"],"names":["React","useState","firebase","App","firestore","firebaseConfig","apiKey","authDomain","projectId","databaseURL","storageBucket","firebaseApp","initializeApp","sucessful","userDocument","db","signIn","email","password","auth","signInWithEmailAndPassword","then","cred","collection","doc","user","uid","catch","error","errorMessage","message","addUserTest","add","name","age","console","log","addUserDocument","firstName","lastName","phoneNumber","signUp","createUserWithEmailAndPassword","code","signOut","firebaseUser","currentUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport App from '../../App';\nimport firestore from '@react-native-firebase/firestore';\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    projectId: 'mobileorderingapp-cfe7f',\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nvar sucessful = true;\nvar userDocument;\nconst db = firebase.firestore()\nexport function signIn(email,password) {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(cred => {\n    userDocument = firestore()\n      .collection('Users')\n      .doc(cred.user.uid);\n  })\n  .catch(function(error) {\n    // Handle Errors here\n    errorMessage = error.message\n\n  });              \n};\n\nexport var userDocument;\nexport var uid;\nexport function addUserTest() {\n  db\n  .collection('Users')\n  .add({\n    name: 'Ada Lovelace',\n    age: 30,\n  })\n  .then(() => {\n    console.log('User added!');\n  });\n}\nexport function addUserDocument(uid,firstName,lastName,phoneNumber,email,password) {\n  db\n  .collection('Users')\n  .add({\n    firstName: firstName,\n    lastName: lastName,\n    phoneNumber: phoneNumber,\n    email: email,\n    password: password\n  })\n  .then(() => {\n    console.log('User added!');\n  });\n\n}\n\nexport function signUp(email,password){\n  firebase.auth()\n  .createUserWithEmailAndPassword(email, password)\n  .then(cred => {\n    console.log('User account created & signed in!');\n    userDocument = db.collection('Users').doc(cred.user.uid);\n    console.log(cred.user.uid)\n    uid = cred.user.uid\n    console.log(uid)\n  })\n  .catch(error => {\n    if (error.code === 'auth/email-already-in-use') {\n      console.log('That email address is already in use!');\n    }\n\n    if (error.code === 'auth/invalid-email') {\n      console.log('That email address is invalid!');\n    }\n\n    console.error(error);\n  });\n}\nexport function signOut() {\n  firebase.auth()\n  .signOut()\n  .then(() => sucessful = true)\n  .then(() => console.log('User signed out!'));\n}\nexport var errorMessage = \"\";\nexport var sucessful;\nexport const firebaseUser = firebase.auth().currentUser;\n\n// export function setFirstName (firstName) {\n//   userDocument = firestore().collection('Users').doc(uid).set({\n//     firstName: firstName\n//   })\n// }\n// export function setLastName (lastName) {\n//   userDocument = firestore.collection('Users').doc(uid).set({\n//     lastName: lastName\n//   })\n// }\n// export function setPhoneNumber (phoneNumber) {\n//   userDocument = firestore.collection('Users').doc(uid).set({\n//     phoneNumber: phoneNumber\n//   })\n// }\n// export function setEmail (email) {\n//   userDocument = firestore.collection('Users').doc(uid).set({\n//     email: email\n//   })\n// }\n// export function setPassword(password) {\n//   userDocument = firestore.collection('Users').doc(uid).set({\n//     password: password\n//   })\n// }\n"]},"metadata":{},"sourceType":"module"}
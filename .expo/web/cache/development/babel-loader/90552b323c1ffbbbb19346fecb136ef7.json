{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\nimport { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport Router from \"./routes/index\";\n\nvar App = function App(_ref) {\n  var navigation = _ref.navigation;\n  var Routes = Router;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    navigation.navigate('Main');\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Welcome \"), React.createElement(Button, {\n    style: styles.signOutButton,\n    title: \"Sign Out\",\n    onPress: function onPress() {\n      return firebase.auth().signOut().then(function () {\n        return console.log('User signed out!');\n      }).then(function () {\n        return navigation.navigate('Login');\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  signOutButton: {}\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["useState","useEffect","firebase","NavigationContainer","useNavigation","Router","App","navigation","Routes","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","auth","navigate","styles","signOutButton","signOut","then","console","log","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAkD,0BAAlD;AACA,OAAOC,MAAP;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC9B,MAAMC,MAAM,GAAGH,MAAf;;AAD8B,kBAGUL,QAAQ,CAAC,IAAD,CAHlB;AAAA;AAAA,MAGvBS,YAHuB;AAAA,MAGTC,eAHS;;AAAA,mBAINV,QAAQ,EAJF;AAAA;AAAA,MAIvBW,IAJuB;AAAA,MAIjBC,OAJiB;;AAO9B,WAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,UAAU,GAAGZ,QAAQ,CAACa,IAAT,GAAgBF,kBAAhB,CAAmCA,kBAAnC,CAAnB;AACA,WAAOC,UAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIL,YAAJ,EAAkB,OAAO,IAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACTJ,IAAAA,UAAU,CAACS,QAAX,CAAoB,MAApB;AACD;;AACC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAIC,MAAM,CAACC,aAAxB;AACA,IAAA,KAAK,EAAG,UADR;AAEA,IAAA,OAAO,EAAE;AAAA,aACPhB,QAAQ,CAACa,IAAT,GACCI,OADD,GAECC,IAFD,CAEM;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;AAAA,OAFN,EAGCF,IAHD,CAGM;AAAA,eAAMb,UAAU,CAACS,QAAX,CAAoB,OAApB,CAAN;AAAA,OAHN,CADO;AAAA,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAgBC,CAtCL;;AAwCA,eAAeV,GAAf;AAEA,IAAMW,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BX,EAAAA,aAAa,EAAE;AAPgB,CAAlB,CAAf","sourcesContent":["\nimport {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation} from '@react-navigation/native';\nimport Router from './routes/index';\n\n\nconst App = ({ navigation }) => {\n  const Routes = Router\n     // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (!user) {\n    navigation.navigate('Main')\n  }\n    return (\n      <View>\n        <Text>Welcome </Text>\n        <Button style = {styles.signOutButton} \n        title = 'Sign Out' \n        onPress={() =>\n          firebase.auth()\n          .signOut()\n          .then(() => console.log('User signed out!'))\n          .then(() => navigation.navigate('Login') )\n        }/>\n      \n      \n      </View>\n    )\n    \n    }\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  signOutButton: {\n    \n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport firestore from 'firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  projectId: 'mobileorderingapp-cfe7f',\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\n\nvar FirebaseController = function () {\n  function FirebaseController() {\n    _classCallCheck(this, FirebaseController);\n  }\n\n  _createClass(FirebaseController, [{\n    key: \"firestore\",\n    value: function firestore() {\n      return firebase.firestore();\n    }\n  }, {\n    key: \"signUp\",\n    value: function signUp(firstName, lastName, phoneNumber, email, password) {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (cred) {\n        console.log('User account created & signed in!');\n        userDocument = db.collection('Users').doc(cred.user.uid);\n        console.log(cred.user.uid);\n        uid = cred.user.uid;\n      }).then(function () {\n        db.collection('Users').doc(uid).set({\n          firstName: firstName,\n          lastName: lastName,\n          phoneNumber: phoneNumber,\n          email: email,\n          password: password\n        }).then(function () {\n          console.log('User added!');\n          user = firebase.auth().currentUser;\n        });\n      }).catch(function (error) {\n        if (error.code === 'auth/email-already-in-use') {\n          console.log('That email address is already in use!');\n        }\n\n        if (error.code === 'auth/invalid-email') {\n          console.log('That email address is invalid!');\n        }\n\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(email, password) {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (cred) {\n        userDocument = firestore().collection('Users').doc(cred.user.uid).then(function () {\n          return true;\n        });\n      }).catch(function (error) {\n        return false;\n      });\n    }\n  }, {\n    key: \"setFirstName\",\n    value: function setFirstName(firstName) {\n      userDocument = firestore().collection('Users').doc(uid).set({\n        firstName: firstName\n      });\n    }\n  }, {\n    key: \"setLastName\",\n    value: function setLastName(lastName) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        lastName: lastName\n      });\n    }\n  }, {\n    key: \"setPhoneNumber\",\n    value: function setPhoneNumber(phoneNumber) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        phoneNumber: phoneNumber\n      });\n    }\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(email) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        email: email\n      });\n    }\n  }, {\n    key: \"setPassword\",\n    value: function setPassword(password) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        password: password\n      });\n    }\n  }]);\n\n  return FirebaseController;\n}();\n\nexport { FirebaseController as default };","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Firebase_Helper.js"],"names":["React","useState","firebase","firestore","firebaseConfig","apiKey","authDomain","projectId","databaseURL","storageBucket","firebaseApp","initializeApp","FirebaseController","firstName","lastName","phoneNumber","email","password","auth","createUserWithEmailAndPassword","then","cred","console","log","userDocument","db","collection","doc","user","uid","set","currentUser","catch","error","code","signInWithEmailAndPassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as firebase from 'firebase';\nimport firestore from 'firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    projectId: 'mobileorderingapp-cfe7f',\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport default class FirebaseController {\n  constructor() {\n  \n  }\n  firestore() {\n    return firebase.firestore()\n  }\n  signUp(firstName,lastName,phoneNumber,email,password){\n    firebase.auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(cred => {\n      console.log('User account created & signed in!');\n      userDocument = db.collection('Users').doc(cred.user.uid);\n      console.log(cred.user.uid)\n      uid = cred.user.uid\n    })\n    .then(() => {\n    db\n    .collection('Users')\n    .doc(uid)\n    .set({\n      firstName: firstName,\n      lastName: lastName,\n      phoneNumber: phoneNumber,\n      email: email,\n      password: password\n    })\n    .then(() => {\n      console.log('User added!');\n      user = firebase.auth().currentUser\n    });\n  \n    })\n    .catch(error => {\n      if (error.code === 'auth/email-already-in-use') {\n        console.log('That email address is already in use!');\n      }\n  \n      if (error.code === 'auth/invalid-email') {\n        console.log('That email address is invalid!');\n      }\n  \n      console.error(error);\n    });\n  }\n  signIn(email,password){\n    \n    firebase.auth().signInWithEmailAndPassword(email, password).then(cred => {\n      userDocument = firestore()\n      .collection('Users')\n      .doc(cred.user.uid)\n      .then(() => { return true})\n    })\n    .catch(function(error) {\n      // Handle Errors here\n      \n      return false\n  \n    });            \n  };\n  setFirstName (firstName) {\n      userDocument = firestore().collection('Users').doc(uid).set({\n        firstName: firstName\n      })\n    }\n  setLastName (lastName) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        lastName: lastName\n      })\n    }\n    setPhoneNumber (phoneNumber) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        phoneNumber: phoneNumber\n      })\n    }\n    setEmail (email) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        email: email\n      })\n    }\n    setPassword(password) {\n      userDocument = firestore.collection('Users').doc(uid).set({\n        password: password\n      })\n    }\n    \n\n}\n"]},"metadata":{},"sourceType":"module"}
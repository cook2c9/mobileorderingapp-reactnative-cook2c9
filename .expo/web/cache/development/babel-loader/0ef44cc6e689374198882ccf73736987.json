{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { white } from 'color-name';\nimport App, { Stack } from \"../../App\";\nimport { signIn, errorMessage, sucessful, firebaseConfig } from \"../user-management/Firebase_Helper\";\nimport SignUpScreen from \"./SignUp\";\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { color } from 'react-native-reanimated';\nimport * as firebase from 'firebase';\nimport firestore from '@react-native-firebase/firestore';\nimport { render } from 'react-dom';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.clear = function () {\n      _this.emailInputRef.clear();\n\n      _this.passwordInputRef.clear();\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = firebase.auth().currentUser;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.signintxt,\n        title: \"Sign In\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Sign In\"), React.createElement(TextInput, {\n        ref: function ref(_ref) {\n          return _this2.emailInputRef = _ref;\n        },\n        placeholder: \"Email\",\n        onChangeText: this.state.email.toString,\n        style: styles.emailInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        ref: function ref(_ref2) {\n          return _this2.passwordInputRef = _ref2;\n        },\n        placeholder: \"Password\",\n        onChangeText: this.state.password.toString,\n        style: styles.passwordInput,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.loginbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Login\",\n        rounded: true,\n        style: styles.loginbtn,\n        onPress: function onPress() {\n          firebase.auth().signInWithEmailAndPassword(_this2.emailInput, _this2.passwordInput).then(function (cred) {\n            navigate(\"Main\");\n\n            _this2.clear();\n          }).catch(function (error) {\n            console.log(error.message);\n            this.clear();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.signupbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Sign Up\",\n        hasText: true,\n        transparent: true,\n        style: styles.signupbtn,\n        onPress: function onPress() {\n          return navigate('SignUp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\",\n    width: 300,\n    height: 300,\n    borderRadius: 20,\n    padding: 10,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowRadius: 10,\n    shadowOpacity: 1.0\n  },\n  loginbtn: {\n    marginTop: 10,\n    padding: 15,\n    borderRadius: 50\n  },\n  signupbtn: {\n    marginTop: 10\n  },\n  signintxt: {\n    marginTop: 10,\n    fontFamily: 'San Francisco',\n    fontWeight: \"bold\",\n    fontSize: 18,\n    alignSelf: \"center\",\n    marginBottom: 50\n  },\n  emailInput: {},\n  passwordInput: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js"],"names":["React","useState","Navigator","white","App","Stack","signIn","errorMessage","sucessful","firebaseConfig","SignUpScreen","auth","NavigationContainer","useNavigation","color","firebase","firestore","render","LoginScreen","props","state","email","password","clear","emailInputRef","passwordInputRef","user","currentUser","navigate","navigation","styles","container","card","signintxt","ref","toString","emailInput","passwordInput","loginbtn","signInWithEmailAndPassword","then","cred","catch","error","console","log","message","signupbtn","Component","StyleSheet","create","width","Dimensions","get","height","alignItems","justifyContent","alignSelf","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowRadius","shadowOpacity","marginTop","fontFamily","fontWeight","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image, Dimensions, Platform } from 'react-native';\nimport { white } from 'color-name';\nimport App, { Stack } from '../../App';\nimport { signIn, errorMessage, sucessful, firebaseConfig } from '../user-management/Firebase_Helper';\nimport SignUpScreen from './SignUp';\nimport { auth } from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { color } from 'react-native-reanimated';\nimport * as firebase from 'firebase';\nimport firestore from '@react-native-firebase/firestore';\nimport { render } from 'react-dom';\n\nexport default class LoginScreen extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        \n    }\n    state = {\n        email: \"\",\n        password: \"\"\n    };  \n    componentDidMount() {\n        const user = firebase.auth().currentUser;\n    }\n   \n    clear = () => {\n        this.emailInputRef.clear()\n        this.passwordInputRef.clear()\n    }\n    render() {\n        const { navigation: { navigate } } = this.props;\n\n        return (\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <Text style={styles.signintxt} title=\"Sign In\">\n                        Sign In\n                    </Text>\n\n                    <TextInput ref={ref => this.emailInputRef = ref} placeholder='Email' onChangeText={this.state.email.toString} style={styles.emailInput} />\n\n                    <TextInput ref={ref => this.passwordInputRef = ref} placeholder='Password' onChangeText={this.state.password.toString} style={styles.passwordInput} secureTextEntry={true} />\n\n\n                    {/* <Button title = 'Forgot Password' hasText transparent /> */}\n                    <View style={styles.loginbtn}>\n                        <Button title='Login' rounded style={styles.loginbtn}\n                            onPress={() => {\n                                firebase.auth().signInWithEmailAndPassword(this.emailInput,this.passwordInput).then(cred => {\n                                    // var userDocument = firestore()\n                                    //   .collection('Users')\n                                    //   .doc(cred.user.uid);\n                                    navigate(\"Main\")\n                                    this.clear()\n                                })\n                                .catch(function (error) {\n                                    // Handle Errors here\n                                    console.log(error.message)\n                                    this.clear()\n                                });\n                            }} />\n                    </View>\n                    <View style={styles.signupbtn}>\n                        <Button title='Sign Up' hasText transparent style={styles.signupbtn} onPress={() => navigate('SignUp')} />\n                    </View>\n                </View>\n            </View>\n\n        );\n\n    }\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    card: {\n        alignSelf: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#ffffff\",\n        width: 300,\n        height: 300,\n        borderRadius: 20,\n        padding: 10,\n        shadowColor: '#000000',\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowRadius: 10,\n        shadowOpacity: 1.0\n    },\n    loginbtn: {\n        marginTop: 10,\n        padding: 15,\n        borderRadius: 50,\n\n    },\n    signupbtn: {\n        marginTop: 10,\n\n    },\n    signintxt: {\n        marginTop: 10,\n        fontFamily: 'San Francisco',\n        fontWeight: \"bold\",\n        fontSize: 18,\n        alignSelf: \"center\",\n        marginBottom: 50,\n    },\n    emailInput: {\n\n\n    },\n    passwordInput: {\n        marginTop: 10,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}
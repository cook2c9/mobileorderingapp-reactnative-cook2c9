{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\n\nvar FirebaseController = function () {\n  function FirebaseController(model, view) {\n    var _this = this;\n\n    _classCallCheck(this, FirebaseController);\n\n    this.model = model;\n    this.view = view;\n    view.on('listModified', function (idx) {\n      return _this.updateSelected(idx);\n    });\n    view.on('addButtonClicked', function () {\n      return _this.addItem();\n    });\n    view.on('delButtonClicked', function () {\n      return _this.delItem();\n    });\n  }\n\n  _createClass(FirebaseController, [{\n    key: \"signIn\",\n    value: function signIn(email, password) {\n      firebase.auth().signInWithEmailAndPassword(email, password);\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem() {\n      var item = window.prompt('Add item:', '');\n\n      if (item) {\n        this._model.addItem(item);\n      }\n    }\n  }, {\n    key: \"delItem\",\n    value: function delItem() {\n      var index = this._model.selectedIndex;\n\n      if (index !== -1) {\n        this._model.removeItemAt(index);\n      }\n    }\n  }, {\n    key: \"updateSelected\",\n    value: function updateSelected(index) {\n      this._model.selectedIndex = index;\n    }\n  }]);\n\n  return FirebaseController;\n}();\n\nexport { FirebaseController as default };","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Firebase_Helper.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","FirebaseController","model","view","on","idx","updateSelected","addItem","delItem","email","password","auth","signInWithEmailAndPassword","item","window","prompt","_model","index","selectedIndex","removeItemAt"],"mappings":";;AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAIA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,yCAFO;AAGnBC,EAAAA,WAAW,EAAE,gDAHM;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAAvB;AAME,IAAMC,WAAW,GAAGN,QAAQ,CAACO,aAAT,CAAuBN,cAAvB,CAApB;;IAEoBO,kB;AAElB,8BAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA;;AACvB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AAGAA,IAAAA,IAAI,CAACC,EAAL,CAAQ,cAAR,EAAwB,UAAAC,GAAG;AAAA,aAAI,KAAI,CAACC,cAAL,CAAoBD,GAApB,CAAJ;AAAA,KAA3B;AACAF,IAAAA,IAAI,CAACC,EAAL,CAAQ,kBAAR,EAA4B;AAAA,aAAM,KAAI,CAACG,OAAL,EAAN;AAAA,KAA5B;AACAJ,IAAAA,IAAI,CAACC,EAAL,CAAQ,kBAAR,EAA4B;AAAA,aAAM,KAAI,CAACI,OAAL,EAAN;AAAA,KAA5B;AACD;;;;2BACMC,K,EAAMC,Q,EAAU;AACnBjB,MAAAA,QAAQ,CAACkB,IAAT,GAAgBC,0BAAhB,CAA2CH,KAA3C,EAAkDC,QAAlD;AAEH;;;8BACS;AACR,UAAMG,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,WAAd,EAA2B,EAA3B,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACR,aAAKG,MAAL,CAAYT,OAAZ,CAAoBM,IAApB;AACD;AACF;;;8BAES;AACR,UAAMI,KAAK,GAAG,KAAKD,MAAL,CAAYE,aAA1B;;AACA,UAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAKD,MAAL,CAAYG,YAAZ,CAAyBF,KAAzB;AACD;AACF;;;mCAEcA,K,EAAO;AACpB,WAAKD,MAAL,CAAYE,aAAZ,GAA4BD,KAA5B;AACD;;;;;;SA/BiBhB,kB","sourcesContent":["import * as firebase from 'firebase';\n\n// Initialize Firebase\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n export default class FirebaseController {\n\n    constructor(model, view) {\n      this.model = model;\n      this.view = view;\n        \n      // Called named methods by passing in view\n      view.on('listModified', idx => this.updateSelected(idx));\n      view.on('addButtonClicked', () => this.addItem());\n      view.on('delButtonClicked', () => this.delItem());\n    }\n    signIn(email,password) {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n\n    }\n    addItem() {\n      const item = window.prompt('Add item:', '');\n      if (item) {\n        this._model.addItem(item);\n      }\n    }\n  \n    delItem() {\n      const index = this._model.selectedIndex;\n      if (index !== -1) {\n        this._model.removeItemAt(index);\n      }\n    }\n  \n    updateSelected(index) {\n      this._model.selectedIndex = index;\n    }\n  }"]},"metadata":{},"sourceType":"module"}
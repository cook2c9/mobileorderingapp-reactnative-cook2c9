{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { white } from 'color-name';\nimport { signIn, errorMessage, successful } from \"../user-management/Firebase_Helper\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigate = this.props.navigation.navigate;\n      var email = this.state.email.email;\n      var password = this.state.password.password;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.signintxt,\n        title: \"Sign In\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"Sign In\"), React.createElement(View, {\n        rounded: true,\n        style: styles.usernamecontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        style: styles.emailInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        rounded: true,\n        style: styles.passwordcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        style: styles.passwordinput,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      })), React.createElement(Button, {\n        title: \"Forgot Password\",\n        hasText: true,\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"Login\",\n        rounded: true,\n        style: styles.loginbtn,\n        onPress: function onPress() {\n          signIn(_this2.state.email, _this2.state.password);\n          console.log(successful);\n          console.log(errorMessage);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"Sign Up\",\n        hasText: true,\n        transparent: true,\n        style: styles.signupbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.signintxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  },\n  loginbtn: {\n    alignSelf: 'center',\n    width: 50\n  },\n  signupbtn: {\n    alignSelf: 'center'\n  },\n  signintxt: {\n    paddingTop: 200,\n    paddingBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 18,\n    alignSelf: 'center'\n  },\n  emailInput: {},\n  passwordinput: {},\n  passwordcontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  usernamecontainer: {\n    alignSelf: \"center\",\n    backgroundColor: '#ffffff',\n    width: 300,\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    marginTop: 20\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Login.js"],"names":["React","useState","Navigator","white","signIn","errorMessage","successful","LoginScreen","props","state","email","password","navigate","navigation","styles","container","signintxt","usernamecontainer","text","setState","emailInput","passwordcontainer","passwordinput","loginbtn","console","log","signupbtn","Component","StyleSheet","create","flex","backgroundColor","alignSelf","width","paddingTop","paddingBottom","fontWeight","fontSize","justifyContent","marginTop","flexDirection","bgImage","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image } from 'react-native';\nimport { white } from 'color-name';\nimport {signIn, errorMessage, successful} from '../user-management/Firebase_Helper';\n\n\nexport default class LoginScreen extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n        }; \n        \n    }\n\n    render() { \n\n    const { navigation: { navigate } } = this.props;\n    let {email}=this.state.email;\n    let {password}=this.state.password;\n\n    return (\n        \n        <View style={styles.container}>\n            \n            <Text style ={styles.signintxt} title = \"Sign In\">\n                Sign In\n            </Text>\n\n            <View  rounded style={styles.usernamecontainer}>\n                <TextInput placeholder='Email'  onChangeText={(text) => { this.setState({ email: text})}} style={styles.emailInput} />\n            </View>\n\n            <View rounded style={styles.passwordcontainer}>\n                <TextInput placeholder='Password' onChangeText={(text) => { this.setState({ password: text})}}  style={styles.passwordinput}  secureTextEntry= {true} />\n             </View>\n\n            <Button title = 'Forgot Password' hasText transparent />\n\n            <Button title = 'Login' rounded style={styles.loginbtn}  \n             onPress={() => {\n                \n                signIn(this.state.email,this.state.password)\n                console.log(successful) \n                console.log(errorMessage);\n                // navigate(\"Main\")\n                \n                \n            }}/>\n            <Button title = 'Sign Up' hasText transparent style={styles.signupbtn} />\n            <Text style ={styles.signintxt} >\n                \n            </Text>\n\n        </View>\n       \n    );\n\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#ffffff',\n        \n    },\n    loginbtn: {\n        alignSelf: 'center',\n        width: 50,\n        \n    },\n    signupbtn: {\n        alignSelf: 'center',\n       \n    },\n    signintxt: {\n        paddingTop: 200,\n        paddingBottom: 50,\n        fontWeight: 'bold',\n        fontSize: 18,\n        alignSelf: 'center'\n    },\n    emailInput: {\n\n\n    },\n    passwordinput: {\n\n        \n    },\n    passwordcontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        marginTop: 20,\n        \n        \n    },\n    usernamecontainer: {\n        alignSelf: \"center\",\n        backgroundColor: '#ffffff',\n        width: 300,\n        justifyContent:\"space-between\",\n        flexDirection: \"column\",\n        marginTop: 20,\n        \n       \n        \n    },\n    bgImage: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    }\n\n    });\n  "]},"metadata":{},"sourceType":"module"}
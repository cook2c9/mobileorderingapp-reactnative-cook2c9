{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { Navigator } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { signOut, firebaseUser, db, user } from \"./controller/user-management/Firebase_Helper\";\nimport User from \"./model/User\";\nimport FirebaseController from \"./controller/user-management/Firebase_Helper\";\n\nvar MainScreen = function (_React$Component) {\n  _inherits(MainScreen, _React$Component);\n\n  var _super = _createSuper(MainScreen);\n\n  function MainScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MainScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n    return _this;\n  }\n\n  _createClass(MainScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch(\"http://localhost:8000/getAllMerchantOauth\").then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataSource: responseJson.merchants\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }\n        }));\n      } else {\n        var merchants = this.state.dataSource.map(function (val, key) {\n          return;\n          React.createElement(View, {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }, val.merchant_id), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }\n          }, val.access_token));\n        });\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        }, \"Content Loaded\"));\n      }\n    }\n  }]);\n\n  return MainScreen;\n}(React.Component);\n\nexport { MainScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  welcometxt: {\n    marginTop: 50\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/Main.js"],"names":["React","Navigator","signOut","firebaseUser","db","user","User","FirebaseController","MainScreen","props","state","isLoading","dataSource","fetch","then","response","json","responseJson","setState","merchants","catch","error","console","log","navigate","navigation","styles","container","map","val","key","merchant_id","access_token","Component","StyleSheet","create","flex","welcometxt","marginTop","mapStyle","width","Dimensions","get","height"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;SACSC,S;;;;;;;;;AACT,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,EAAhC,EAAoCC,IAApC;AACA,OAAOC,IAAP;AACA,OAAOC,kBAAP;;IAEqBC,U;;;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAFe;AAMlB;;;;wCACmB;AAAA;;AAChB,aAAOC,KAAK,CAAC,2CAAD,CAAL,CACNC,IADM,CACD,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADP,EAENF,IAFM,CAEA,UAACG,YAAD,EAAkB;AACrB,QAAA,MAAI,CAACC,QAAL,CAAc;AACVP,UAAAA,SAAS,EAAE,KADD;AAEVC,UAAAA,UAAU,EAAEK,YAAY,CAACE;AAFf,SAAd;AAIH,OAPM,EAQNC,KARM,CAQA,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVM,CAAP;AAWH;;;6BAEQ;AAAA,UACiBG,QADjB,GACgC,KAAKf,KADrC,CACGgB,UADH,CACiBD,QADjB;;AAGL,UAAK,KAAKd,KAAL,CAAWC,SAAhB,EAA2B;AACvB,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAIe,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADJ;AAMH,OAPD,MAQK;AAEG,YAAIR,SAAS,GAAG,KAAKT,KAAL,CAAWE,UAAX,CAAsBgB,GAAtB,CAA0B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACnD;AACI,8BAAC,IAAD;AAAM,YAAA,GAAG,EAAIA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOD,GAAG,CAACE,WAAX,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOF,GAAG,CAACG,YAAX,CAFJ;AAIP,SANe,CAAhB;AAOJ,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAIN,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ;AAOH;AAEJ;;;;EApDmC3B,KAAK,CAACiC,S;;SAAzBzB,U;AAuDrB,IAAMkB,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAE;AADH,GAJiB;AAO7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAD1B;AAENG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAF3B;AAPmB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Navigator, View, Button, Text, StyleSheet, TextInput, Image, Dimensions, ActivityIndicator } from 'react-native';\nimport { signOut, firebaseUser, db, user } from './controller/user-management/Firebase_Helper'\nimport User from './model/User';\nimport FirebaseController from './controller/user-management/Firebase_Helper'\n\nexport default class MainScreen extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            dataSource: null,\n        }\n    }\n    componentDidMount() {\n        return fetch(\"http://localhost:8000/getAllMerchantOauth\")\n        .then(response => response.json())\n        .then( (responseJson) => {\n            this.setState({\n                isLoading: false,\n                dataSource: responseJson.merchants,\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n    \n    render() {\n        const { navigation: { navigate } } = this.props;\n        \n        if  (this.state.isLoading) {\n            return (\n                <View style = {styles.container}>\n                  <ActivityIndicator />  \n                </View>\n                \n            );\n        } \n        else {\n            \n                let merchants = this.state.dataSource.map((val,key) => {\n                    return \n                        <View key = {key}> \n                            <Text>{val.merchant_id}</Text>\n                            <Text>{val.access_token}</Text>\n                        </View>\n                });\n            return (    \n                <View style = {styles.container}>\n                    <Text>Content Loaded</Text>\n                    {/* <Text>{merchants}</Text> */}\n                    \n                </View>\n            );  \n        }\n        \n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    welcometxt: {\n        marginTop: 50,\n    },\n    mapStyle: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n\n});\n"]},"metadata":{},"sourceType":"module"}
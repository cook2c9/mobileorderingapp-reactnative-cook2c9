{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/recogunnels/Projects/mobileorderingapp-reactnative/src/screens/Mapscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-navigation';\nimport Map from \"../components/Map\";\nimport OrderMenu from \"../screens/OrderMenu\";\n\nvar MapScreen = function (_React$Component) {\n  _inherits(MapScreen, _React$Component);\n\n  var _super = _createSuper(MapScreen);\n\n  function MapScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MapScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"OrderMenu\", {\n            id: item.merchantId\n          }, {\n            name: item.name\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Location, {\n        title: item.name,\n        address: item.address.address_line_1,\n        merchantId: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.state = {\n      locations: null\n    };\n    return _this;\n  }\n\n  _createClass(MapScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocations();\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations() {\n      var resp, respJson;\n      return _regeneratorRuntime.async(function getLocations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsLocations\"));\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 5:\n              respJson = _context.sent;\n              this.setState({\n                locations: respJson\n              });\n              console.warn(this.state.locations);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(SafeAreaView, {\n        forceInset: {\n          top: 'always'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, React.createElement(Map, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, \"Locations\"), React.createElement(FlatList, {\n        data: this.state.locations,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MapScreen;\n}(React.Component);\n\nexport { MapScreen as default };\n\nvar Location = function Location(_ref2) {\n  var title = _ref2.title,\n      address = _ref2.address;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, title), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \" From \", address, \" \"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  },\n  item: {\n    marginTop: 20,\n    backgroundColor: '#ffffff',\n    alignSelf: \"center\",\n    width: \"75%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.36,\n    shadowRadius: 8,\n    elevation: 11,\n    borderRadius: 10,\n    borderWidth: 1\n  },\n  title: {}\n});","map":{"version":3,"sources":["/Users/recogunnels/Projects/mobileorderingapp-reactnative/src/screens/Mapscreen.js"],"names":["React","useState","render","TouchableOpacity","SafeAreaView","Map","OrderMenu","MapScreen","props","renderItem","item","navigation","navigate","id","merchantId","name","address","address_line_1","state","locations","getLocations","fetch","resp","json","respJson","setState","console","warn","top","fontSize","Component","Location","title","modalVisible","setModalVisible","styles","StyleSheet","create","container","flex","backgroundColor","marginTop","alignSelf","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { View, Text, FlatList, StyleSheet, Button,  Modal, Alert, TouchableHighlight} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-navigation';\nimport Map from '../components/Map'\nimport OrderMenu from '../screens/OrderMenu'\n\nexport default class MapScreen extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            locations: null,\n        }\n    }\n    componentDidMount() {\n        this.getLocations();\n    }\n    async getLocations() {\n        let resp = await fetch(\"https://us-central1-squareoauth-99eb5.cloudfunctions.net/app/getMerchantsLocations\")\n        let respJson = await resp.json()\n        this.setState({locations: respJson});\n        console.warn(this.state.locations)\n    }\n    renderItem = ({ item }) => {\n        return (\n            <TouchableOpacity\n                onPress={() => {\n                    this.props.navigation.navigate(\"OrderMenu\", {id: item.merchantId}, {name: item.name})\n                    \n                }}>\n                <Location title={item.name} address={item.address.address_line_1} merchantId={item.id}/>  \n            </TouchableOpacity>\n                \n        ) \n    }\n    render() {\n        const { navigate } = this.props.navigation;\n        return (\n            //Will return null until datasource is properly saved to state\n            <SafeAreaView forceInset={{top:'always'}}>\n                <Map />\n                <Text style={{fontSize:40}}>Locations</Text>\n                <FlatList data={this.state.locations}\n                renderItem={this.renderItem}\n                />\n                \n            </SafeAreaView>\n        ) \n    }   \n}\n    const Location = ({title, address}) => {\n        const [modalVisible, setModalVisible] = useState(false);\n        return (\n            <View style={styles.item}>\n                <Text style={styles.title}>{title}</Text>\n                <Text> From {address} </Text>\n            </View> \n        )\n    }\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor:'#ffffff',\n    },\n    item: {\n        marginTop: 20,\n        backgroundColor:'#ffffff',\n        alignSelf:\"center\",\n        width:\"75%\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n\t        width: 0,\n\t        height: 5,\n        },\n        shadowOpacity: 0.36,\n        shadowRadius: 8,\n        elevation: 11,\n        borderRadius:10,\n        borderWidth: 1,\n    },\n    title:{\n\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}
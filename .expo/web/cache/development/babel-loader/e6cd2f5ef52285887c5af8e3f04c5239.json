{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport React from 'react';\nimport * as firebase from 'firebase';\nimport App from \"../../App\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n  authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n  databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n  storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n};\nvar firebaseApp = firebase.initializeApp(firebaseConfig);\nvar message = '';\n\nvar FirebaseController = function () {\n  function FirebaseController() {\n    _classCallCheck(this, FirebaseController);\n\n    this.setErrorMessage = function () {};\n\n    this.state = {\n      errorMessage: new String()\n    };\n    this.setState({\n      errorMessage: 'test'\n    });\n    console.log(this.state.errorMessage);\n    this.signIn.bind(this);\n    this.setErrorMessage.bind(this);\n  }\n\n  _createClass(FirebaseController, [{\n    key: \"signIn\",\n    value: function signIn(email, password) {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        console.log(\"Succuessful login\");\n      }).catch(function (error) {\n        message = error.message;\n      });\n      this.state.errorMessage = message;\n      this.setErrorMessage();\n      console.log(this.state.errorMessage);\n    }\n  }]);\n\n  return FirebaseController;\n}();\n\nexport { FirebaseController as default };","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/controller/user-management/Firebase_Helper.js"],"names":["React","firebase","App","firebaseConfig","apiKey","authDomain","databaseURL","storageBucket","firebaseApp","initializeApp","message","FirebaseController","setErrorMessage","state","errorMessage","String","setState","console","log","signIn","bind","email","password","auth","signInWithEmailAndPassword","then","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,GAAP;AAGA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,yCAFO;AAGnBC,EAAAA,WAAW,EAAE,gDAHM;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAAvB;AAMA,IAAMC,WAAW,GAAGP,QAAQ,CAACQ,aAAT,CAAuBN,cAAvB,CAApB;AACA,IAAIO,OAAO,GAAG,EAAd;;IACqBC,kB;AACjB,gCAAc;AAAA;;AAAA,SA+BdC,eA/Bc,GA+BG,YAAM,CAEtB,CAjCa;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IAAIC,MAAJ;AADL,KAAb;AAIA,SAAKC,QAAL,CAAc;AAACF,MAAAA,YAAY,EAAE;AAAf,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,YAAvB;AACA,SAAKK,MAAL,CAAYC,IAAZ,CAAiB,IAAjB;AACA,SAAKR,eAAL,CAAqBQ,IAArB,CAA0B,IAA1B;AAGC;;;;2BAEMC,K,EAAMC,Q,EAAU;AAEnBrB,MAAAA,QAAQ,CAACsB,IAAT,GAAgBC,0BAAhB,CAA2CH,KAA3C,EAAkDC,QAAlD,EACCG,IADD,CACM,YAAW;AACbR,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAHD,EAICQ,KAJD,CAIO,UAASC,KAAT,EAAgB;AAEnBjB,QAAAA,OAAO,GAAGiB,KAAK,CAACjB,OAAhB;AAGH,OATD;AAUA,WAAKG,KAAL,CAAWC,YAAX,GAA0BJ,OAA1B;AACA,WAAKE,eAAL;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,YAAvB;AACH;;;;;;SA9BgBH,kB","sourcesContent":["import React from 'react';\nimport * as firebase from 'firebase';\nimport App from '../../App';\n// Initialize Firebase\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nvar message = '';\nexport default class FirebaseController {\n    constructor() {\n\n    this.state = {\n        errorMessage: new String,\n\n    };\n    this.setState({errorMessage: 'test'})\n    console.log(this.state.errorMessage);\n    this.signIn.bind(this);\n    this.setErrorMessage.bind(this);\n    \n\n    }\n    \n    signIn(email,password) {\n        \n        firebase.auth().signInWithEmailAndPassword(email, password)\n        .then(function() {\n            console.log(\"Succuessful login\")\n        })\n        .catch(function(error) {\n            // Handle Errors here\n            message = error.message;\n            \n\n        }); \n        this.state.errorMessage = message;\n        this.setErrorMessage();\n        console.log(this.state.errorMessage);\n    }\n\n    setErrorMessage= () => {\n        \n    }\n    \n\n  }"]},"metadata":{},"sourceType":"module"}
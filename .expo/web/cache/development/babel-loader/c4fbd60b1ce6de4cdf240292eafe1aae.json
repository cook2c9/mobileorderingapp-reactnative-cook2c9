{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Navigator } from \"react-native-web/dist/index\";\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from \"./Main\";\nimport SignUpScreen from \"./controller/user-management/SignUp\";\nimport LoginScreen from \"./controller/user-management/Login\";\nvar Stack = createStackNavigator();\n\nfunction App() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    projectId: 'mobileorderingapp-cfe7f',\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\"\n  };\n  var firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (user == null) {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      screenOptions: ({\n        gestureEnabled: false\n      }, {\n        headerShown: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Main\",\n      component: MainScreen,\n      options: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUpScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    })));\n  } else {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      screenOptions: ({\n        gestureEnabled: false\n      }, {\n        headerShown: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Main\",\n      component: MainScreen,\n      options: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUpScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    })));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/recogunnels/Documents/mobileorderingapp-reactnative/App.js"],"names":["React","useState","useEffect","Navigator","firebase","NavigationContainer","useNavigation","createStackNavigator","MainScreen","SignUpScreen","LoginScreen","Stack","App","firebaseConfig","apiKey","authDomain","projectId","databaseURL","storageBucket","firebaseApp","initializeApp","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","auth","gestureEnabled","headerShown"],"mappings":"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","sourcesContent":["\nimport React,{useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button, Navigator } from 'react-native';\nimport * as firebase from 'firebase';\nimport { NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from './Main';\nimport SignUpScreen from './controller/user-management/SignUp';\nimport LoginScreen from './controller/user-management/Login'\n\nconst Stack = createStackNavigator();\n\nfunction App () {\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyC-68UPtqGgmasYZf1rgl0fcm_fOnnxsnE\",\n    authDomain: \"mobileorderingapp-cfe7f.firebaseapp.com\",\n    projectId: 'mobileorderingapp-cfe7f',\n    databaseURL: \"https://mobileorderingapp-cfe7f.firebaseio.com\",\n    storageBucket: \"mobileorderingapp-cfe7f.appspot.com\",\n  };\n  \n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  // Set an initializing state whilst Firebase connects\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState();\n\n  // Handle user state changes\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  if (initializing) return null;\n\n  if (user == null) {\n    return (\n      <NavigationContainer>\n      <Stack.Navigator\n      initialRouteName=\"Login\"\n      screenOptions={{ gestureEnabled: false },{headerShown:false}}\n      >\n      <Stack.Screen\n        name=\"Main\"\n        component={MainScreen}\n        options={{ }}\n      />  \n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ }}\n      />\n      <Stack.Screen\n        name=\"SignUp\"\n        component={SignUpScreen}\n      />\n    </Stack.Navigator>\n    </NavigationContainer>\n    );\n  }\n  else {\n    return (\n      <NavigationContainer>\n      <Stack.Navigator\n      initialRouteName=\"Main\"\n      screenOptions={{ gestureEnabled: false },{headerShown:false}}\n      >\n      <Stack.Screen\n        name=\"Main\"\n        component={MainScreen}\n        options={{ }}\n      />  \n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ }}\n      />\n      <Stack.Screen\n        name=\"SignUp\"\n        component={SignUpScreen}\n      />\n    </Stack.Navigator>\n    </NavigationContainer>\n    );\n  }\n    \n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}